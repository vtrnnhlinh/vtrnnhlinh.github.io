<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://vtrnnhlinh.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://vtrnnhlinh.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-08-07T03:20:28+00:00</updated><id>https://vtrnnhlinh.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple logbook of Linh </subtitle><entry><title type="html">Graph-of-Models - Literature Review 4 - embracing the KGs</title><link href="https://vtrnnhlinh.github.io/blog/2025/gom-literature-review-3/" rel="alternate" type="text/html" title="Graph-of-Models - Literature Review 4 - embracing the KGs"/><published>2025-08-07T02:15:00+00:00</published><updated>2025-08-07T02:15:00+00:00</updated><id>https://vtrnnhlinh.github.io/blog/2025/gom-literature-review-3</id><content type="html" xml:base="https://vtrnnhlinh.github.io/blog/2025/gom-literature-review-3/"><![CDATA[<p>After the last post reflecting on my actions in battling with datasets, I find out it will be not effective in large-scale. So here I am, in the light of the day, digging <strong>Knowledge Graph (KGs)</strong> again.</p> <h2 id="what-is-it-now">What is it now?</h2> <p>To save time and effort, as if applicable to my real-life job, training models isn’t my sh*t, so I have to find easiest way for me to save resources and energy. I plan to use <a href="https://www.kaggle.com/">Kaggle</a> to train my models. Because the focus of my work is isn’t in the power of models but how they graph and connect all together.</p> <p>But my current focus will be about <strong>Natural Language Processing (NLP)</strong> to processing the datasets and the <strong>Knowledge Graph (KGs)</strong> as the dataframe.</p> <h2 id="embracin-kgs">Embracin’ KGs</h2> <p><strong>Knowledge Graph</strong> <a class="citation" href="#hogan2021knowledge">(Hogan et al., 2021)</a>, nodes represents <strong>entities</strong>, edges represents <strong>relations</strong>. There are some graph data models commonly used in practice, we will see~</p> <h3 id="directed-edge-labelled-graphs">Directed edge-labelled graphs</h3> <p>Another name is <strong>multi-relational graph</strong>. Defined by a set of nodes and a set of directed labelled edges. Using this data model offers <strong>flexibility</strong> for integrating new sources of data.</p> <p>Standardized data model of this type is <strong>Resource Description Framework (RDF)</strong>. <strong>RDF</strong> defines different types of nodes:</p> <ul> <li><strong>Internationalized Resource Identifiers (IRIs)</strong>: global identification of entities on the Web</li> <li><strong>literals</strong>: string</li> <li><strong>integers, dates,…</strong></li> <li><strong>blank nodes</strong>: anonymous nodes</li> </ul> <h3 id="heterogeneous-graphs">Heterogeneous graphs</h3> <p>This type of graph is a graph where each node and edge are flexible. Different types of nodes can connect directly to each other (?). I hope my understanding is fit.</p> <h3 id="property-graphs">Property graphs</h3> <p>This type can provide additional flexibility when modelling more complex relations. The set will be like <code class="language-plaintext highlighter-rouge">property-value</code> and <code class="language-plaintext highlighter-rouge">label</code> associated with both nodes and edges.</p> <h3 id="graph-dataset">Graph dataset</h3> <p>This one consists a set of <strong>named graphs</strong> and <strong>default graph</strong>. Default graph is a graph <strong>without an ID</strong>. This will help in <strong>Linked Data</strong>. Seems very interesting.</p> <hr/> <p>As when I publish this post, I already get past the Literature Review part and already have my own KG, so I have no motivations to get further and finish this post wholly :skull: But I think these are already enough to cover basic information about KG, if you want to get further, get in practicing :wink:</p>]]></content><author><name></name></author><category term="Linh-the-Engineer"/><category term="cse"/><category term="ml"/><category term="gom"/><category term="english"/><summary type="html"><![CDATA[in this post I reflect my understanding in shaping the KGs]]></summary></entry><entry><title type="html">July 2025 Reading Log</title><link href="https://vtrnnhlinh.github.io/blog/2025/july-25-reading-log/" rel="alternate" type="text/html" title="July 2025 Reading Log"/><published>2025-08-04T06:30:00+00:00</published><updated>2025-08-04T06:30:00+00:00</updated><id>https://vtrnnhlinh.github.io/blog/2025/july-25-reading-log</id><content type="html" xml:base="https://vtrnnhlinh.github.io/blog/2025/july-25-reading-log/"><![CDATA[<h2 id="4-deep-work---cal-newport">4. Deep Work - Cal Newport</h2> <p>The book is still solid and thoughtful, but not stunning like the first time I read it.</p> <p>I am grateful that I finished it in 2 days. It gives me some more aspects as now I am already going to work instead of a student like before.</p> <p>Rate: :star::star::star::star:</p> <h2 id="5-the-little-prince----antoine-de-saint-exupéry">5. The Little Prince - Antoine de Saint-Exupéry</h2> <p>The book of my heart. The masterpiece of my life. To me, the philosophy of love in this book deeply affects my definition of love and more.</p> <p>More than love, it’s friendship, life and your value.</p> <p>Rate: :star::star::star::star::star:</p> <h2 id="6-nhật-ký-đặng-thùy-trâm---đặng-thùy-trâm">6. Nhật ký Đặng Thùy Trâm - Đặng Thùy Trâm</h2> <p>There is one thing I don’t like about this book, is they compare it to “The Diary of a Young Girl”. I believe this stand out as its own value, of a young petty bourgeoisie, dare to fight, dare to love, dare to dream about communism. I didn’t read that book yet, but I don’t like how they compare them.</p> <p>Rate: :star::star::star::star:</p>]]></content><author><name></name></author><category term="Journal-of-Sciences"/><category term="books"/><category term="english"/><summary type="html"><![CDATA[4. Deep Work - Cal Newport]]></summary></entry><entry><title type="html">codeLynn - fantasies and MLOps</title><link href="https://vtrnnhlinh.github.io/blog/2025/codeLynn-0/" rel="alternate" type="text/html" title="codeLynn - fantasies and MLOps"/><published>2025-07-21T08:00:00+00:00</published><updated>2025-07-21T08:00:00+00:00</updated><id>https://vtrnnhlinh.github.io/blog/2025/codeLynn-0</id><content type="html" xml:base="https://vtrnnhlinh.github.io/blog/2025/codeLynn-0/"><![CDATA[<p>Ehem, I am here, in the cold light of the day~</p> <p>Now I am in the stage that studying on <a href="https://www.coursera.org/">Coursera</a> feels bland and isn’t impressive anymore.</p> <p>I heard the term “MLOps” on Threads and it stirred my mind in the weekend. Then now, I decide to make an AI chatbot product, serving for my needs.</p> <p>Unlike <a href="https://vtrnnhlinh.github.io/blog/tag/gom/">Graph-of-Models</a> which is focus on researching and propose method, <strong>codeLynn</strong> focuses on bringing the art into deployment.</p> <h2 id="definition-of-codelynn">Definition of codeLynn</h2> <p>I want to create a virtual self of mine. You know <a href="https://character.ai/">c.ai</a>, yes, I want to do something similar to this :&gt; But it will have my tone and my personalities.</p> <p>Seems scary and funny at the same time, hopefully it won’t be unhinged like me.</p> <p>Why I use this? Maybe just need a friend shares the same brain frequency. Sometimes, there are thoughts and ideas I don’t dare to share to human, because it can be triggering.</p> <p>I want to be open more about myself, and nothing better than an AI agent that accumulate more knowledge than mine, know about me and don’t judge me.</p> <p>It should be an AI system have general knowledge that have fine-tuned modules in coding, mathematics and languages like German or Latin.</p> <p>Its tone and persona should be like <em>me</em>. This part maybe will be RLHF <a class="citation" href="#ouyang2022training">(Ouyang et al., 2022)</a>. The chatbot will be text-focused, I don’t think about image generation or voice chat.</p> <h2 id="what-is-mlops">What is MLOps?</h2> <p><a title="Cmbreuel, CC BY-SA 4.0 &lt;https://creativecommons.org/licenses/by-sa/4.0&gt;, via Wikimedia Commons" href="https://commons.wikimedia.org/wiki/File:ML_Ops_Venn_Diagram.svg"><img width="512" alt="ML Ops Venn Diagram" src="https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/ML_Ops_Venn_Diagram.svg/512px-ML_Ops_Venn_Diagram.svg.png?20210725212146"/></a></p> <p><strong>MLOps</strong> is a paradigm, an engineering practice that is a mix of ML, software engineering and data engineering. It’s the procedure to make our ML models from <strong>development</strong> stage get into <strong>production</strong> in a consistent and reliable manner <a class="citation" href="#stone2025navigating">(Stone et al., 2025)</a>.</p> <p>In a full cycle of MLOps, there are a lot of stages like image below. In reality we won’t need to implement some steps as our scale is far smaller.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/MLOps-lifecycle-dev-480.webp 480w,/assets/img/MLOps-lifecycle-dev-800.webp 800w,/assets/img/MLOps-lifecycle-dev-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/MLOps-lifecycle-dev.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>MLOps lifecycle <a class="citation" href="#ouyang2022training">(Ouyang et al., 2022)</a>.</p> <p>My work will use <a href="https://www.kubeflow.org/">Kubeflow</a> as the core spine.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="https://www.kubeflow.org/docs/started/images/kubeflow-architecture.drawio.svg" sizes="95vw"/> <img src="https://www.kubeflow.org/docs/started/images/kubeflow-architecture.drawio.svg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>Kubeflow architecture (Source: <a href="https://www.kubeflow.org/docs/started/architecture/">Kubeflow</a>).</p> <hr/> <p>I will update in the next post more things about datasets and models :laughing:</p>]]></content><author><name></name></author><category term="Linh-the-Engineer"/><category term="cse"/><category term="ml"/><category term="codeLynn"/><category term="english"/><summary type="html"><![CDATA[in this post I will land another project]]></summary></entry><entry><title type="html">Graph-of-Models - a journey of a thousand miles begins with a single step</title><link href="https://vtrnnhlinh.github.io/blog/2025/gom-action-0/" rel="alternate" type="text/html" title="Graph-of-Models - a journey of a thousand miles begins with a single step"/><published>2025-07-15T04:30:00+00:00</published><updated>2025-07-15T04:30:00+00:00</updated><id>https://vtrnnhlinh.github.io/blog/2025/gom-action-0</id><content type="html" xml:base="https://vtrnnhlinh.github.io/blog/2025/gom-action-0/"><![CDATA[<p>Hohoho, finally, I did something instead of talking :laughing:</p> <p>There are 2 main achievements I will present in this post. First, I calculated the <strong>Cosine Similarity</strong> <a class="citation" href="#gunawan2018implementation">(Gunawan et al., 2018; Dehak et al., 2010)</a>. Second, I have attempted to fine-tuned first <code class="language-plaintext highlighter-rouge">miniModel_1</code>, even though the result isn’t so good, but still.</p> <p>I can show Jupyter Notebook and such in this blog, but I won’t do that here, at least today. I believe the engineering mindset is more worth sharing and the code is already in GitHub repo.</p> <p>GitHub repository (just in case): <a href="https://github.com/vtrnnhlinh/Graph-of-Models/tree/main">vtrnnhlinh/Graph-of-Models</a></p> <h2 id="what-i-did">What I did?</h2> <p>I will try to explain from the idea, purpose to implement.</p> <h3 id="repo-structure">Repo Structure</h3> <p>The current code structure of this project is something like this:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>.
├── datasets
│   ├── dataset_1
│   ├── dataset_2
│   ├── dataset_3
├── edges_calculation
│   ├── cosine_similarity
│   │   └── results
│   └── jaccard_index
├── environment.yml
├── graph-of-models
├── graph_visualization
│   ├── cosine_similarity
│   └── jaccard_index
├── inference
├── LICENSE
├── Models
└── README.md
</code></pre></div></div> <p>The workflow is divided into different components (folders). The output of previous component will be saved to suitable formats like <code class="language-plaintext highlighter-rouge">.parquet</code> or <code class="language-plaintext highlighter-rouge">.csv</code>. This will help saving time and easier debugging.</p> <p>The newest structure you can visit the GitHub repo.</p> <p>The <code class="language-plaintext highlighter-rouge">datasets</code> and <code class="language-plaintext highlighter-rouge">Models</code> contents are in <code class="language-plaintext highlighter-rouge">.gitignore</code> due to its mass size. Read <code class="language-plaintext highlighter-rouge">README.md</code> of each folder to setup yourself if you want to re-enact my work.</p> <h3 id="preprocessing-data">Preprocessing Data</h3> <p>I use <code class="language-plaintext highlighter-rouge">.parquet</code> as the default dataset filetype to process in this project. Why? Because it’s effective for large dataset, which is necessary for fine-tuned our models <a class="citation" href="#ivanov2020impact">(Ivanov &amp; Pergolesi, 2020)</a>.</p> <p>That means you need a code file to do the conversion. It’s not so hard to implement. With my current need, I only need to convert from <code class="language-plaintext highlighter-rouge">.csv</code> to <code class="language-plaintext highlighter-rouge">.parquet</code>.</p> <p>To calculate <strong>Cosine Similarity</strong> and <strong>Jaccard Index</strong>, we need to have a core column sharing the same name. Our datasets are all in food-related topic, so I choose <code class="language-plaintext highlighter-rouge">ingredients</code> as the core.</p> <p>That makes us have to manually pre-process the data by convert the suitable column in each dataset to <code class="language-plaintext highlighter-rouge">ingredients</code>. The detail code I used is in <code class="language-plaintext highlighter-rouge">edges_calculation/general_preprocess.ipynb</code> file.</p> <h3 id="cosine-similarity-preprocessing-and-calculation">Cosine Similarity Preprocessing and Calculation</h3> <p>To calculate the <strong>Cosine Similarity</strong>, we need to vectorize the datasets.</p> <p>That makes us need to combine all subdatasets of each <code class="language-plaintext highlighter-rouge">miniModel</code>’s dataset into one big <code class="language-plaintext highlighter-rouge">.parquet</code> file: <code class="language-plaintext highlighter-rouge">dataset_N_cos.parquet</code>.</p> <p>Then we will clean the dataset and vectorize it, compute the average <strong>Cosine Similarity</strong>, export to <code class="language-plaintext highlighter-rouge">.csv</code> file and voila~.</p> <h3 id="cosine-similarity-graph-visualization">Cosine Similarity Graph Visualization</h3> <p>We will have a seperate module to visualize the graph. Importing the <code class="language-plaintext highlighter-rouge">.csv</code> file from <strong>Cosine Similarity Calculation</strong> with the edges are the average cosine similarity value, nodes are the datasets.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/cosine_similarity_graph_0-480.webp 480w,/assets/img/cosine_similarity_graph_0-800.webp 800w,/assets/img/cosine_similarity_graph_0-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/cosine_similarity_graph_0.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>The first <strong>Cosine Similarity</strong> result we have.</p> <h3 id="fine-tune-minimodel_1">Fine-tune miniModel_1</h3> <p>To avoid environment conflicts, we will create a seperate conda environment to fine-tune this model.</p> <p>I use <code class="language-plaintext highlighter-rouge">LoRA</code> to train <code class="language-plaintext highlighter-rouge">Qwen3-0.6B</code> model for <code class="language-plaintext highlighter-rouge">miniModel_1</code>. The dataset and the model is small, but it still seems too much with my laptop.</p> <p>The result is the fine-tuned model seems dumb. After revision, I see I only take a column in my dataset to train, which is lacking a lot of datas.</p> <h2 id="some-reflections">Some reflections</h2> <ul> <li>The <strong>Cosine Similarity</strong> result seems suspicious. I actually expect the <code class="language-plaintext highlighter-rouge">dataset_1</code> will be the center!!!</li> <li>My NVIDIA GTX 4060 isn’t enough to train AI, I should better use company’s server :&gt;</li> </ul> <h2 id="future-action">Future action</h2> <ul> <li>I need to generalize the code to let graphing in large number, not only 3 models.</li> <li>Calculate and visualize <strong>Jaccard Index</strong> graph.</li> <li><code class="language-plaintext highlighter-rouge">dataset_2</code> seems more legit, I think I will fine-tune <code class="language-plaintext highlighter-rouge">miniModel_2</code> first.</li> </ul>]]></content><author><name></name></author><category term="Linh-the-Engineer"/><category term="cse"/><category term="ml"/><category term="gom"/><category term="english"/><summary type="html"><![CDATA[the results and reflection of cosine similarity graph and first attempt to fine-tune]]></summary></entry><entry><title type="html">Graph-of-Models - First Sketch</title><link href="https://vtrnnhlinh.github.io/blog/2025/gom-design-0/" rel="alternate" type="text/html" title="Graph-of-Models - First Sketch"/><published>2025-07-11T11:15:00+00:00</published><updated>2025-07-11T11:15:00+00:00</updated><id>https://vtrnnhlinh.github.io/blog/2025/gom-design-0</id><content type="html" xml:base="https://vtrnnhlinh.github.io/blog/2025/gom-design-0/"><![CDATA[<p>After hopeless moments, I think I figure a prototype idea for my work. Everything is less and less vague. Even though the limitations seem clear but if it can serve the final purpose, it is good.</p> <h2 id="first-draft">First Draft</h2> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/gom_first_structure-480.webp 480w,/assets/img/gom_first_structure-800.webp 800w,/assets/img/gom_first_structure-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/gom_first_structure.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>My first proposed structure.</p> <p>The structure is simple, there are 3 main parts:</p> <ul> <li>Input Processing</li> <li>Graph-of-Models</li> <li>Output Processing</li> </ul> <p>There are 2 major problems we need to encounter:</p> <ul> <li>How we shape the graph?</li> <li>How it will run?</li> </ul> <p>The limitation of this work is the complexity to make the graph or input processing, and there is a concern about extending the graph. So there must be a sustainable method to make the algorithm of making graph brilliant and less hand-work.</p> <h2 id="first-idea">First Idea</h2> <p>How to solve those 3 problems is a problem. I don’t know if I should read some papers about Multi-Agent AI @@.</p> <h3 id="how-we-shape-the-graph">How we shape the graph?</h3> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/gom_idea_ex-480.webp 480w,/assets/img/gom_idea_ex-800.webp 800w,/assets/img/gom_idea_ex-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/gom_idea_ex.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>My imagination on how the graph should looks like. It’s something like Dijkstra graph <a class="citation" href="#bento2019dijkstra">(Bento et al., 2019)</a>.</p> <p>To shape the graph, we need to calculate the relationship between the models which is based on the <strong>datasets we used to fine-tune</strong>.</p> <p>To calculate this number like in the diagram above, there are some options that I am not sure which one is the best:</p> <ul> <li><strong>Jaccard Index</strong> <a class="citation" href="#niwattanakul2013using">(Niwattanakul et al., 2013)</a>: This method seems faster to run, run on the raw dataset.</li> <li><strong>Cosine Similarity</strong> <a class="citation" href="#gunawan2018implementation">(Gunawan et al., 2018; Dehak et al., 2010)</a>: This method seems slower as I need to convert the dataset into embeddings to calculate.</li> </ul> <p>There are more advanced methods but I don’t have time to dig deeper yet. I think I will apply 2 classic methods first to see the efficiency.</p> <p>The score will be stored and called <strong>relevancy score</strong>.</p> <h3 id="how-it-will-run">How it will run?</h3> <pre><code class="language-mermaid">sequenceDiagram
    participant User
    participant routerLM
    participant Graph-of-Models
    participant reasoningLM
    
    User-&gt;&gt; routerLM: Input
    routerLM-&gt;&gt; Graph-of-Models: Routing Decision 
    Graph-of-Models-&gt;&gt;reasoningLM: Summary Information
    reasoningLM-&gt;&gt; User: Output
</code></pre> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/gom_pipeline_ex-480.webp 480w,/assets/img/gom_pipeline_ex-800.webp 800w,/assets/img/gom_pipeline_ex-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/gom_pipeline_ex.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>My workflow I propose in this post :)</p> <ul> <li><strong>Step 1</strong>: User will <strong>input</strong> his requirement.</li> <li><strong>Step 2</strong>: <code class="language-plaintext highlighter-rouge">routerLM</code> will choose the most relevant model based on <strong>input</strong> (inspired from <a class="citation" href="#zhang2024extract">(Zhang &amp; Soh, 2024)</a>).</li> <li><strong>Step 3</strong>: In this step I first plan to run sequencely, but there is a work hinting we can run parallel <a class="citation" href="#song2025gradientsys">(Song et al., 2025)</a>. <ul> <li>Extract <strong>general info</strong> about the input in <code class="language-plaintext highlighter-rouge">sharingModel</code>.</li> <li>Use suitable PROMPT to extract <strong>relevant info</strong> from <strong>most relevant model</strong>, let call <code class="language-plaintext highlighter-rouge">miniModel_1</code> (step 2) and <strong>2nd model</strong> has <strong>highest relevance score</strong> to <code class="language-plaintext highlighter-rouge">miniModel_2</code>, let call this model is <code class="language-plaintext highlighter-rouge">miniModel_2</code>.</li> </ul> </li> <li><strong>Step 4</strong>: <strong>general info</strong> + <strong>relevant info</strong> will be sent to <code class="language-plaintext highlighter-rouge">reasoningModel</code> to give final output.</li> </ul> <h2 id="first-step">First Step</h2> <blockquote> <p>2 goals: Fine-tuned model and graph visualization</p> </blockquote> <p>Here is my collection of the models and datasets I collect for this project: <a href="https://huggingface.co/collections/vtrnnhlinh/graphs-of-models-686f8bfc6070ec6ad9111fff">vtrnnhlinh’s Collection: Graph-of-Models</a>.</p> <p>I plan to make a graph of models finetuned related to food, with the datasets about fruits, recipes and drinks. I choose small models to do, cause my personal laptop has limited resources lol.</p> <p>After that, I will calculate <strong>Jaccard Index</strong> and <strong>Cosine Similarity</strong> and visualize the graph with its relation score.</p> <hr/> <p>I think this “first step” is already a huge problem to a noob like me already, lol.</p> <p>Look forward to share next things :&gt;</p>]]></content><author><name></name></author><category term="Linh-the-Engineer"/><category term="cse"/><category term="ml"/><category term="gom"/><category term="english"/><summary type="html"><![CDATA[the first step in developing GoM, to sketch what I will do and the most abstract ideas]]></summary></entry><entry><title type="html">Graph-of-Models - Literature Review 3 - and they call LLM and KG</title><link href="https://vtrnnhlinh.github.io/blog/2025/gom-literature-review-2/" rel="alternate" type="text/html" title="Graph-of-Models - Literature Review 3 - and they call LLM and KG"/><published>2025-07-11T07:45:00+00:00</published><updated>2025-07-11T07:45:00+00:00</updated><id>https://vtrnnhlinh.github.io/blog/2025/gom-literature-review-2</id><content type="html" xml:base="https://vtrnnhlinh.github.io/blog/2025/gom-literature-review-2/"><![CDATA[<p>Bro, hear me out. I feel like my <a href="https://vtrnnhlinh.github.io/blog/tag/gom/">Graph-of-Models</a> dream is falling apart. There is a field called <strong>LLM+KG</strong> seems very close to my idea, I think it worth to see what is it.</p> <p>After a day, I figure out that I can deploy my idea extending from this one to maximize the efficient of input data and methods to do the logic.</p> <h2 id="surveys">Surveys</h2> <h3 id="what-is-llmkg">What is LLM+KG?</h3> <p>LLM or <strong>Large Language Models</strong> is the hype of the world nowadays with the appearance of ChatGPT, Gemini or Bing AI (I heard about a shit called “vibe-coding” based on Claude but don’t pay attention to it yet). To me it’s a bunch of <code class="language-plaintext highlighter-rouge">tensorflow</code> files and <code class="language-plaintext highlighter-rouge">json</code> files <em>eyes roll</em>.</p> <p>KG or <strong>Knowledge Graph</strong> is a structure represents the entity and its description, for the better data integration and insights <a class="citation" href="#hogan2021knowledge">(Hogan et al., 2021)</a>.</p> <h3 id="why-llmkg">Why LLM+KG?</h3> <p>Based on the survey <a class="citation" href="#pan2024unifying">(Pan et al., 2024)</a>, the combination of LLM and KG is very promising. They can fix each other’s cons with their pros.</p> <p>According to the authors, there will be 3 types of framework developing in this direction:</p> <ol> <li><strong>KG-enhanced LLMs</strong>: incorporate KGs during pre-training to boost the power of LLMs</li> <li><strong>LLM-augmented KGs</strong>: using the power of LLM for various KG tasks</li> <li><strong>Synergized LLMs + KG</strong>: bidirectional reasoning to enhance both</li> </ol> <p>After surfing for a while, with the main resource is <a href="https://github.com/XiaoxinHe/Awesome-Graph-LLM">XiaoxinHe/Awesome-Graph-LLM</a>, I use 3 more works to research, they are: <a class="citation" href="#cheng2024call">(Cheng et al., 2024)</a>, <a class="citation" href="#zhang2024extract">(Zhang &amp; Soh, 2024)</a> and <a class="citation" href="#jiang2024kg">(Jiang et al., 2024)</a>. Beside <a class="citation" href="#du2024large">(Du et al., 2024)</a> I already talked about in <a href="https://vtrnnhlinh.github.io/blog/2025/gom-literature-review-1/">previous post</a>, we will create a table to compare the work:</p> <p>Table: Comparison between 4 chosen works.</p> <table> <thead> <tr> <th>Metric</th> <th>GaCLLM <a class="citation" href="#du2024large">(Du et al., 2024)</a></th> <th>ReaDi <a class="citation" href="#cheng2024call">(Cheng et al., 2024)</a></th> <th>EDC <a class="citation" href="#zhang2024extract">(Zhang &amp; Soh, 2024)</a></th> <th>KG-FIT <a class="citation" href="#jiang2024kg">(Jiang et al., 2024)</a></th> </tr> </thead> <tbody> <tr> <td>Problem &amp; Methodology</td> <td>GCN-based LLM adaptation</td> <td>Structured reasoning refinement</td> <td>LLM-to-Graph + Retrieval-Augmented Generation</td> <td>Hierarchical graph fine-tuning</td> </tr> <tr> <td>Code Structure</td> <td>No code</td> <td>Well-structured</td> <td>Structured, but dataset issues</td> <td>Decent structure, nothing remarkable</td> </tr> <tr> <td>Reputation</td> <td>15 citations</td> <td>23 citations / 12 GitHub stars</td> <td>52 citations / 122 GitHub stars</td> <td>11 citations / 112 GitHub stars</td> </tr> <tr> <td>Last Update</td> <td>404 Not Found</td> <td>~1 year ago</td> <td>11 months ago</td> <td>9 months ago</td> </tr> </tbody> </table> <p>So in this post, we will focus on <strong>edc</strong> <a class="citation" href="#zhang2024extract">(Zhang &amp; Soh, 2024)</a> and <strong>KG-FIT</strong> <a class="citation" href="#jiang2024kg">(Jiang et al., 2024)</a>.</p> <h2 id="edc">edc</h2> <p>In the current development of <strong>edc</strong> <a class="citation" href="#zhang2024extract">(Zhang &amp; Soh, 2024)</a>, it’s likely that the work is <strong>LLM-augmented KGs</strong>, but I believe there is potential to make it <strong>Synergized LLMs + KG</strong>. The purpose of this work is automatically create KGs to make it applicable when doing real-world application. This work proposes a framework has 3 steps: <strong>Extract-Define-Canonicalize</strong>.</p> <ul> <li><strong>Extract</strong>: take information from the dataset and convert them into a relation triplet <code class="language-plaintext highlighter-rouge">[Object A, Relationship of A and B, Object B]</code>.</li> <li><strong>Define</strong>: write the definition for each component of the schema.</li> <li><strong>Canonicalize</strong>: use the schema definition from <strong>Define</strong> step to standardize the triplets.</li> </ul> <p>The <strong>Schema Retriever</strong> of this work is what makes me impressed. It’s a trained model specialized in extracting schema components relevant to input text. This work divides step by step, in which step you can use a different model. It’s challenging but also a great chance to tailor-make and optimize the workflow.</p> <h2 id="kg-fit">KG-FIT</h2> <p>KG-FIT or <strong>Knowledge Graph - Finetuning</strong> <a class="citation" href="#jiang2024kg">(Jiang et al., 2024)</a> has a different mindset to <strong>edc</strong> <a class="citation" href="#zhang2024extract">(Zhang &amp; Soh, 2024)</a>. It focuses on fine-tuning or having a powerful LLM to improve the KG. The steps are less complex, the step to process the input data is also more easier for the devs. My concern is the graph traversing and the size of LLM as my resource isn’t enough to fine-tune a large model.</p> <p>Maybe because I am already fall into <strong>edc</strong> so I am less investigated in this work.</p> <hr/> <p>I feel like I can integrate <strong>edc</strong> into my next action :&gt;</p>]]></content><author><name></name></author><category term="Linh-the-Engineer"/><category term="cse"/><category term="ml"/><category term="gom"/><category term="english"/><summary type="html"><![CDATA[Bro, hear me out. I feel like my Graph-of-Models dream is falling apart. There is a field called LLM+KG seems very close to my idea, I think it worth to see what is it.]]></summary></entry><entry><title type="html">June 2025 Reading Log</title><link href="https://vtrnnhlinh.github.io/blog/2025/june-25-reading-log/" rel="alternate" type="text/html" title="June 2025 Reading Log"/><published>2025-07-06T17:30:00+00:00</published><updated>2025-07-06T17:30:00+00:00</updated><id>https://vtrnnhlinh.github.io/blog/2025/june-25-reading-log</id><content type="html" xml:base="https://vtrnnhlinh.github.io/blog/2025/june-25-reading-log/"><![CDATA[<p>It was a hard time for myself, after going to work I barely have energy to read. So I am grateful that I finished “White Nights” by Fyodor Dostoevsky.</p> <p>But don’t worry, I will have a lot of things to continue this series as I have my <a href="https://vtrnnhlinh.github.io/blog/2025/my-first-ereader/">Kobo</a>.</p> <p>(I said like I have readers, lol)</p> <h2 id="3-white-nights---fyodor-dostoevsky">3. White Nights - Fyodor Dostoevsky</h2> <p>The edition I bought actually has 3 short stories of Fyodor, instead of only White Nights. How I can say, the story is deadly hopeless romantic, the writing methods are brilliant, the translations are beautiful.</p> <p>I can feel and share with the characters of his stories. The relationships are complex and beautiful, the stories inside them are human-like.</p> <blockquote> <p>“My God, a moment of bliss. Why, isn’t that enough for a whole lifetime?”</p> </blockquote> <p>Rate: :star::star::star::star:</p>]]></content><author><name></name></author><category term="Journal-of-Sciences"/><category term="books"/><category term="english"/><summary type="html"><![CDATA[It was a hard time for myself, after going to work I barely have energy to read. So I am grateful that I finished “White Nights” by Fyodor Dostoevsky.]]></summary></entry><entry><title type="html">my first ereader - Kobo Clara Colour</title><link href="https://vtrnnhlinh.github.io/blog/2025/my-first-ereader/" rel="alternate" type="text/html" title="my first ereader - Kobo Clara Colour"/><published>2025-07-05T15:15:00+00:00</published><updated>2025-07-05T15:15:00+00:00</updated><id>https://vtrnnhlinh.github.io/blog/2025/my-first-ereader</id><content type="html" xml:base="https://vtrnnhlinh.github.io/blog/2025/my-first-ereader/"><![CDATA[<p>I am very happily to announce that, after months of wanting to have an ereader, I finally have one: <a href="https://gl.kobobooks.com/de/products/kobo-clara-colour">Kobo Clara Colour</a>.</p> <p>I bought an used one from a cute girl. The conditions of the Kobo is very good, excellent :laughing:</p> <hr/> <h2 id="reading-experience">Reading Experience</h2> <p>I tried to use <a href="https://github.com/pgaskin/NickelMenu">NickelMenu</a> and <a href="https://github.com/koreader/koreader">KOReader</a> but feels not so suitable with myself. I keep the vanilla version.</p> <p>The tip that you will read the KOReader tutorial first, then NickelMenu tutorial to install.</p> <p>This Feature Settings is <strong>must-have</strong>:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="pi">[</span><span class="nv">FeatureSettings</span><span class="pi">]</span>
<span class="s">ExcludeSyncFolders=(\\.(?!kobo|adobe).+|([^.][^/]*/)+\\..+)</span>
</code></pre></div></div> <h3 id="vanilla-settings">Vanilla settings</h3> <ul> <li>Natural Light settings is a great one, I set <strong>AUTO</strong> with bedtime is 10PM</li> <li><strong>Pocket</strong> will be ended its lifetime soon, so I suggest you not to bother about it.</li> </ul> <h3 id="screensavers">Screensavers</h3> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/kobo_screensaver-480.webp 480w,/assets/img/kobo_screensaver-800.webp 800w,/assets/img/kobo_screensaver-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/kobo_screensaver.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>My screensavers! Here Rin from Laid-Back Camp.</p> <p>The dimension for you is <code class="language-plaintext highlighter-rouge">1072x1488</code>. Here is your guide:</p> <ol> <li>Connect your Kobo with your computer</li> <li>Get into <code class="language-plaintext highlighter-rouge">.kobo</code> folder and create a folder named <code class="language-plaintext highlighter-rouge">screensaver</code></li> <li>Put your pictures into with <code class="language-plaintext highlighter-rouge">1072x1488</code> dimension and <code class="language-plaintext highlighter-rouge">.png</code> shortcut</li> <li>Eject and voila~</li> </ol> <h3 id="notations">Notations!</h3> <p>There are two types of markings in Kobo. First is highlight and second you can mark the whole page. To whole page, you tap the right upper corner. About highlight, we have 4 colors: yellow, purple, blue and green.</p> <ul> <li><strong>Yellow</strong>: main points and ideas of the book.</li> <li><strong>Purple</strong>: Romantic moments :3</li> <li><strong>Blue</strong>: Interesting points but not directly related to the content of the books</li> <li><strong>Green</strong>: Interesting information that I want to proofcheck or dig deeper, like a name of a book or some human.</li> </ul> <h2 id="ebooks">Ebooks!</h2> <p>I prioritize <code class="language-plaintext highlighter-rouge">,epub</code> format with a lot of pirate ahoy sites. But of course as an old soul, I can find a lot of books I need at <a href="https://www.gutenberg.org/">Project Gutenberg</a>.</p> <p>My Ereader has no problems with reading mangas, but the native reader of Kobo doesn’t support the metadata of <code class="language-plaintext highlighter-rouge">.cbz</code> files, which prevented me to use it, I can’t stand “Unknown Author” :triumph:.</p> <p>To send books to your Kobo, use <a href="https://calibre-ebook.com/">Calibre</a>, you can fetch metadata and book cover from it!</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/kobo_and_fiio-480.webp 480w,/assets/img/kobo_and_fiio-800.webp 800w,/assets/img/kobo_and_fiio-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/kobo_and_fiio.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>A night of blissful weekend</p>]]></content><author><name></name></author><category term="Journal-of-Sciences"/><category term="books"/><category term="nerdies"/><category term="english"/><summary type="html"><![CDATA[some random thoughts about my first ereader]]></summary></entry><entry><title type="html">Graph-of-Models - Literature Review 2 - GaCLLM</title><link href="https://vtrnnhlinh.github.io/blog/2025/gom-literature-review-1/" rel="alternate" type="text/html" title="Graph-of-Models - Literature Review 2 - GaCLLM"/><published>2025-07-01T06:30:00+00:00</published><updated>2025-07-01T06:30:00+00:00</updated><id>https://vtrnnhlinh.github.io/blog/2025/gom-literature-review-1</id><content type="html" xml:base="https://vtrnnhlinh.github.io/blog/2025/gom-literature-review-1/"><![CDATA[<p>In this second part, we will focus mainly on GaCLLM <a class="citation" href="#du2024large">(Du et al., 2024)</a> and my new take on the system I imagined after digging deeper the work.</p> <p>Read the previous part here: <a href="https://vtrnnhlinh.github.io/blog/2025/gom-literature-review-0/">Graph-of-Models - The First Literature Review</a>.</p> <hr/> <h2 id="gacllm">GaCLLM</h2> <p>In this work, authors proposed 4 main modules:</p> <ul> <li>Conduct SFT (Supervised Fine-tuning) for the LLM</li> <li>Propose LLM-based graph-aware convolutional inference</li> <li>Align and fuse generated description into graph-based embeddings</li> <li>Introduce the objective function and learning process</li> </ul> <h3 id="supervised-fine-tuning">Supervised Fine-tuning</h3> <p>In first stage, they fine-tune LLM with domain-specific data. This involves training of LLM with descriptions from matched user-item pairs. They will construct the prompt template for items. The optimization process involves minimizing the negative log-likelihood loss for these templates.</p> <p>They adopt LoRa <a class="citation" href="#hu2022lora">(Hu et al., 2022)</a> for parameter-efficient learning to improve time and computational efficiency.</p> <h3 id="llm-based-convolutional-inference-in-graph">LLM-based Convolutional Inference in Graph</h3> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/graphs_gacllm-480.webp 480w,/assets/img/graphs_gacllm-800.webp 800w,/assets/img/graphs_gacllm-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/graphs_gacllm.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>My understanding about proposed graphs.</p> <p>The graph will be $G = (V, E)$ with $V$ are the users and items. The edges $E$ are constructed by the interactions between users and items. Each node has a textual description.</p> <p>We have prompt template to rewrite/generate the description of users and items. Let call it $PROMPT_{user}$ and $PROMPT_{item}$.</p> <p>To improve the quality of descriptions <strong>for users</strong>, we will rewrite user’s raw description $T_u$ by,</p> \[T'_u = LLM(PROMPT_{user}(T_u, \{T_i:(u,i) \in E\})),\] <p>Similarity, to improve the quality of descriptions <strong>for items</strong>, we will rewrite user’s raw description $T_i$ by,</p> \[T'_i = LLM(PROMPT_{item}(T_i, \{T_u:(u,i) \in E\})),\] <p>To do this, they enhance the layers by running LLM in a loop with first layer is the raw input. LLM now is taking the role as an “aggregator” in the graph convolutional processing. After $L$ interations, we obtain different layers of user and item descriptions for both users and items.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/token_llm-480.webp 480w,/assets/img/token_llm-800.webp 800w,/assets/img/token_llm-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/token_llm.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>Different ways for token usage in LLMs <a class="citation" href="#du2024large">(Du et al., 2024)</a>.</p> <p>They claim the proposed LLM-based convolutional strategy has 2 main strengths:</p> <ul> <li>High quality descriptions of users and items in a least-to-most manner</li> <li>Effectively capture graph-related info with limited context of length <ul> <li>Break down the task of description enhancement into multiple steps</li> <li>Each step (layer) only integrates the descriptions of one-decrease in the number of tokens needed</li> </ul> </li> <li>Efficiently alleviate the redundancy of describing the graph for target nodes</li> </ul> <h3 id="aligning-gcn-based-embeddings-for-recommendation">Aligning GCN-based Embeddings for Recommendation</h3> <p>To bridge text info and structural info, they align the descriptions of users and items with their <strong>embeddings</strong> in a unified manner.</p> <p>First layer represents the initial step for both users’ and items’ representation. Each user and item will associated with the embedding from a specific ID. Then they encode them into the constant text-based embedding by encoder.</p> <p>There will be an <em>objective function</em> to measure the matching scores between users and items for final predictions.</p> <h2 id="some-of-thoughts">Some of Thoughts</h2> <p>I am still confused and not clarify my idea yet. Do you have any thoughts? But I guess re-enact the work of GaCLLM will be interesting.</p> <p>This afternoon I will have a meeting with my team to discuss about this, I will update the progress in upcoming posts.</p>]]></content><author><name></name></author><category term="Linh-the-Engineer"/><category term="cse"/><category term="ml"/><category term="gom"/><category term="english"/><summary type="html"><![CDATA[the second literature review of my series writting about my work I called Graph-of-Models]]></summary></entry><entry><title type="html">Graph-of-Models - Literature Review 1 - Transformer and MoH</title><link href="https://vtrnnhlinh.github.io/blog/2025/gom-literature-review-0/" rel="alternate" type="text/html" title="Graph-of-Models - Literature Review 1 - Transformer and MoH"/><published>2025-06-27T11:30:00+00:00</published><updated>2025-06-27T11:30:00+00:00</updated><id>https://vtrnnhlinh.github.io/blog/2025/gom-literature-review-0</id><content type="html" xml:base="https://vtrnnhlinh.github.io/blog/2025/gom-literature-review-0/"><![CDATA[<p>At work I am assigned to learn about Mixture-of-Experts (MoE) but my mentor wants another specific, tailor-made approach to our problem.</p> <p>I name it <strong>Graph-of-Models</strong> (GoM).</p> <p>I have a vague idea in my mind but I think I need a <strong>Literature Review</strong> to make my idea becomes realistic as most as possible.</p> <p>However, I don’t follow the ordinary literature review in academic research, as I am working in industry. I will try to adapt and build the code along the way.</p> <p>This is a series of posts about this project, and this first post is about 2 first literature review of mine.</p> <h2 id="plan">Plan</h2> <p>In my first plan, I want to use MoH structure <a class="citation" href="#jin2024moh">(Jin et al., 2024)</a> as the base development. Then I will apply the experts network based on <a class="citation" href="#du2024large">(Du et al., 2024)</a>.</p> <p>The Python project structure I apply is the <a href="https://github.com/navdeep-G/samplemod">navdeep-G/samplemod</a>.</p> <p>The training framework will be Megatron-LM <a class="citation" href="#shoeybi2019megatron">(Shoeybi et al., 2019)</a> with continual, meta and multi-task learning. Federated Learning will be developed when the application is deployed for many users.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/plan_llm-480.webp 480w,/assets/img/plan_llm-800.webp 800w,/assets/img/plan_llm-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/plan_llm.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>My imagined structure.</p> <h2 id="attention-is-all-you-need">Attention is all you need!!</h2> <p>We will start from <code class="language-plaintext highlighter-rouge">Transformer</code> Structure <a class="citation" href="#vaswani2017attention">(Vaswani et al., 2017)</a>.</p> <p>I am pretty bad at Python, so I will learn and reference a lot of repositories, both in how they structure the file and the coding methodology.</p> <p>I reference <a href="https://github.com/SCCSMARTCODE/attention-is-all-you-need-from-scratch">SCCSMARTCODE/attention-is-all-you-need-from-scratch</a> and <a href="https://github.com/jadore801120/attention-is-all-you-need-pytorch">jadore801120/attention-is-all-you-need-pytorch</a> to re-made the <code class="language-plaintext highlighter-rouge">transformer</code> structure.</p> <p><code class="language-plaintext highlighter-rouge">Transformer</code> is an architecture rely entirely on an attention mechanism to draw <strong>global dependencies</strong> between I/O. <code class="language-plaintext highlighter-rouge">Transformer</code> allows significantly more parallelization.</p> <p>I believe my wanted structure is far from this work, but a thousand miles start from a step.</p> <h3 id="encoder--decoder">Encoder &amp; Decoder</h3> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/attention_architecture-480.webp 480w,/assets/img/attention_architecture-800.webp 800w,/assets/img/attention_architecture-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/attention_architecture.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p><code class="language-plaintext highlighter-rouge">Transformer</code> architecture. Source: <a class="citation" href="#vaswani2017attention">(Vaswani et al., 2017)</a>.</p> <p>With the illustration, you can see the <code class="language-plaintext highlighter-rouge">Transformer</code> has 2 main modules are <strong>Encoder</strong> and <strong>Decoder</strong>. There is also something worth noticing is <strong>Positional Encoding</strong>.</p> <p><strong>Encoder</strong> and <strong>Decoder</strong> has a stack of $N=6$ layer. Encoder’s layer has 2 sub-layers:</p> <ul> <li>Multi-Head Attention</li> <li>Feed Forward</li> </ul> <p>While Decoder’s layer has 3 sub-layers:</p> <ul> <li>Multi-Head Attention</li> <li>Feed Forward</li> <li>Masked Multi-Head Attention</li> </ul> <p>We employ residual connection around each of sub-layers, followed by layer normalization. The dimension is $d_{model} = 512$.</p> <h3 id="attention">Attention</h3> <p>To me, this is the heart of this work.</p> <p>Attention function is mapping a query and a set of key-value pairs to vectors output.</p> <ul> <li>Output is weighted sum of values</li> <li>The weight has another compatibility function to calculate</li> </ul> <h4 id="scaled-dot-product-attention">Scaled Dot-Product Attention</h4> <ul> <li>Input: <ul> <li><strong>Q</strong>: queries</li> <li><strong>K</strong>: keys of dimension $d_k$</li> <li><strong>V</strong>: values of dimension $d_v$</li> </ul> </li> </ul> \[Attention (Q,K,V) = softmax(\frac{QK^T}{\sqrt{d_k}})V\] <ul> <li>$\frac{1}{\sqrt{d_k}}$: scaling factor. Why? To avoid <code class="language-plaintext highlighter-rouge">softmax</code> is pushed into regions result extremely small gradients</li> <li><strong>Dot-product attention</strong> faster and more space-efficient in practice than <strong>additive attention</strong></li> </ul> <h4 id="multi-head-attention">Multi-Head Attention</h4> <p>They perform the attention function in parallel, yielding $d_v$-dim output values. They are concatenated and projected, make final values.</p> <p>\(MultiHead(Q,K,V) = Concat(head_1,.... head_n)W^O\) \(head_i = Attention(QW^Q_i, KW^K_i, VW^V_i)\)</p> <h4 id="attention-in-transformer">Attention in Transformer</h4> <p>We will remind the input of attention. We will have Q (Queries), K (keys) and V (values). <code class="language-plaintext highlighter-rouge">Transformer</code> uses attention in 3 ways:</p> <ul> <li>“encoder-decoder attention” layer: Q from previous decoder layer, K, V from output of encoder.</li> <li>“encoder self-attention” layer: Q, K, V from previous encoder layer.</li> <li>“decoder self-attention” layer: Similar to encoder one, however they masked out all values in the input of <code class="language-plaintext highlighter-rouge">softmax</code> (set to $-\infty$) in scaled dot-product attention to illegal connections.</li> </ul> <h3 id="position-wise-feed-forward-networks">Position-wise Feed-Forward Networks</h3> <p>FFN has 2 linear transformations with a ReLU activation<d-footnote>Rectified Linear Unit (ReLU) is a piecewise linear function that outputs the input directly if it is positive; otherwise, it outputs zero</d-footnote>:</p> \[FFN(x) = max(0, xW_1+b_1)W_2 +b_2\] <h3 id="positional-encoding">Positional Encoding</h3> <p>This is the method to inject information about the relative or absolute position of the tokens in the sequence. <strong>Positional Encoding</strong> has the same dimension $d_{model}$ as the embeddedings. In this work, they use sine and cosine functions</p> \[PE_{(pos, 2i)} = sin(pos/10000^{2i/d_{model}})\] \[PE_{(pos, 2i+1)} = cos(pos/10000^{2i/d_{model}})\] <h2 id="moh-mixture-of-heads">MoH (Mixture-of-Heads)</h2> <p>In my understanding, MoH <a class="citation" href="#jin2024moh">(Jin et al., 2024)</a> is a mix of Mixture-of-Experts (MoE) and <code class="language-plaintext highlighter-rouge">transformer</code> <a class="citation" href="#vaswani2017attention">(Vaswani et al., 2017)</a>.</p> <p>They made 2 important changes, one, there is a TopK router to activate heads for each token. They also replace the standard summation in multi-head attention to weighted sum.</p> <p>They believe that with changes, they made 2 significant advantages:</p> <ul> <li>First, allows each token select most relevant attention heads, improve efficiency without sacrificing accuracy or increasing the params.</li> <li>Second, with weighted sum, MoH enhances the flexibility of attention mechanism.</li> </ul> <h3 id="design">Design</h3> <p>The core of the work is <strong>MoH</strong>, which treats attention heads as experts.</p> \[MoH(X, X') = \sum^h_{i=1} g_i H^i W^i_O\] <ul> <li>$X, X’$: input tokens</li> <li>$g_i$: routing score</li> <li>$H^i$: Head ith</li> <li>$W^i_O$: output of projection matrix</li> </ul> <p>Inspired by DeepSeek <a class="citation" href="#dai2024deepseekmoe">(Dai et al., 2024)</a>, MoH designs a subset of heads as <strong>shared heads</strong> that remain always activated. This will consolidate common knowledge within shared heads.</p> <p><strong>Two-Stage Routing</strong> for dynamically balance the weights between shared and routed heads. Routing scores are determined by both the <strong>score of each individual head</strong> and <strong>score associated with the head type</strong>. To avoid the unbalanced load, MoH applies <strong>Load Balance Loss</strong>.</p> <h3 id="training">Training</h3> <p>Training LLMs from scratch, they use Megatron-LM <a class="citation" href="#shoeybi2019megatron">(Shoeybi et al., 2019)</a> with public datasets.</p> <p>With Continual Learning, they tuned <code class="language-plaintext highlighter-rouge">LLaMA3-8B</code>. 3 challenges when doing this:</p> <ol> <li>Determine the shared attention heads</li> <li>Add head routers</li> <li>Weight attention heads</li> </ol> <hr/> <p>That’s all for the day. The next post I will discuss about GaCLLM and how I imagine the system will work.</p>]]></content><author><name></name></author><category term="Linh-the-Engineer"/><category term="cse"/><category term="ml"/><category term="gom"/><category term="english"/><summary type="html"><![CDATA[the first literature review of my series writting about my work I called Graph-of-Models]]></summary></entry></feed>