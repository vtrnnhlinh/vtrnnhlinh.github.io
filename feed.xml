<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://vtrnnhlinh.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://vtrnnhlinh.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-07-15T02:58:21+00:00</updated><id>https://vtrnnhlinh.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple logbook of Linh </subtitle><entry><title type="html">Graph-of-Models - First Sketch</title><link href="https://vtrnnhlinh.github.io/blog/2025/gom-design-0/" rel="alternate" type="text/html" title="Graph-of-Models - First Sketch"/><published>2025-07-11T11:15:00+00:00</published><updated>2025-07-11T11:15:00+00:00</updated><id>https://vtrnnhlinh.github.io/blog/2025/gom-design-0</id><content type="html" xml:base="https://vtrnnhlinh.github.io/blog/2025/gom-design-0/"><![CDATA[<p>After hopeless moments, I think I figure a prototype idea for my work. Everything is less and less vague. Even though the limitations seem clear but if it can serve the final purpose, it is good.</p> <h2 id="first-draft">First Draft</h2> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/gom_first_structure-480.webp 480w,/assets/img/gom_first_structure-800.webp 800w,/assets/img/gom_first_structure-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/gom_first_structure.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>My first proposed structure.</p> <p>The structure is simple, there are 3 main parts:</p> <ul> <li>Input Processing</li> <li>Graph-of-Models</li> <li>Output Processing</li> </ul> <p>There are 2 major problems we need to encounter:</p> <ul> <li>How we shape the graph?</li> <li>How it will run?</li> </ul> <p>The limitation of this work is the complexity to make the graph or input processing, and there is a concern about extending the graph. So there must be a sustainable method to make the algorithm of making graph brilliant and less hand-work.</p> <h2 id="first-idea">First Idea</h2> <p>How to solve those 3 problems is a problem. I don’t know if I should read some papers about Multi-Agent AI @@.</p> <h3 id="how-we-shape-the-graph">How we shape the graph?</h3> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/gom_idea_ex-480.webp 480w,/assets/img/gom_idea_ex-800.webp 800w,/assets/img/gom_idea_ex-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/gom_idea_ex.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>My imagination on how the graph should looks like. It’s something like Dijkstra graph <a class="citation" href="#bento2019dijkstra">(Bento et al., 2019)</a>.</p> <p>To shape the graph, we need to calculate the relationship between the models which is based on the <strong>datasets we used to fine-tune</strong>.</p> <p>To calculate this number like in the diagram above, there are some options that I am not sure which one is the best:</p> <ul> <li><strong>Jaccard Index</strong> <a class="citation" href="#niwattanakul2013using">(Niwattanakul et al., 2013)</a>: This method seems faster to run, run on the raw dataset.</li> <li><strong>Cosine Similarity</strong> <a class="citation" href="#gunawan2018implementation">(Gunawan et al., 2018; Dehak et al., 2010)</a>: This method seems slower as I need to convert the dataset into embeddings to calculate.</li> </ul> <p>There are more advanced methods but I don’t have time to dig deeper yet. I think I will apply 2 classic methods first to see the efficiency.</p> <p>The score will be stored and called <strong>relevancy score</strong>.</p> <h3 id="how-it-will-run">How it will run?</h3> <pre><code class="language-mermaid">sequenceDiagram
    participant User
    participant routerLM
    participant Graph-of-Models
    participant reasoningLM
    
    User-&gt;&gt; routerLM: Input
    routerLM-&gt;&gt; Graph-of-Models: Routing Decision 
    Graph-of-Models-&gt;&gt;reasoningLM: Summary Information
    reasoningLM-&gt;&gt; User: Output
</code></pre> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/gom_pipeline_ex-480.webp 480w,/assets/img/gom_pipeline_ex-800.webp 800w,/assets/img/gom_pipeline_ex-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/gom_pipeline_ex.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>My workflow I propose in this post :)</p> <ul> <li><strong>Step 1</strong>: User will <strong>input</strong> his requirement.</li> <li><strong>Step 2</strong>: <code class="language-plaintext highlighter-rouge">routerLM</code> will choose the most relevant model based on <strong>input</strong> (inspired from <a class="citation" href="#zhang2024extract">(Zhang &amp; Soh, 2024)</a>).</li> <li><strong>Step 3</strong>: In this step I first plan to run sequencely, but there is a work hinting we can run parallel <a class="citation" href="#song2025gradientsys">(Song et al., 2025)</a>. <ul> <li>Extract <strong>general info</strong> about the input in <code class="language-plaintext highlighter-rouge">sharingModel</code>.</li> <li>Use suitable PROMPT to extract <strong>relevant info</strong> from <strong>most relevant model</strong>, let call <code class="language-plaintext highlighter-rouge">miniModel_1</code> (step 2) and <strong>2nd model</strong> has <strong>highest relevance score</strong> to <code class="language-plaintext highlighter-rouge">miniModel_2</code>, let call this model is <code class="language-plaintext highlighter-rouge">miniModel_2</code>.</li> </ul> </li> <li><strong>Step 4</strong>: <strong>general info</strong> + <strong>relevant info</strong> will be sent to <code class="language-plaintext highlighter-rouge">reasoningModel</code> to give final output.</li> </ul> <h2 id="first-step">First Step</h2> <blockquote> <p>2 goals: Fine-tuned model and graph visualization</p> </blockquote> <p>Here is my collection of the models and datasets I collect for this project: <a href="https://huggingface.co/collections/vtrnnhlinh/graphs-of-models-686f8bfc6070ec6ad9111fff">vtrnnhlinh’s Collection: Graph-of-Models</a>.</p> <p>I plan to make a graph of models finetuned related to food, with the datasets about fruits, recipes and drinks. I choose small models to do, cause my personal laptop has limited resources lol.</p> <p>After that, I will calculate <strong>Jaccard Index</strong> and <strong>Cosine Similarity</strong> and visualize the graph with its relation score.</p> <hr/> <p>I think this “first step” is already a huge problem to a noob like me already, lol.</p> <p>Look forward to share next things :&gt;</p>]]></content><author><name></name></author><category term="Linh-the-Engineer"/><category term="cse"/><category term="ml"/><category term="gom"/><category term="english"/><summary type="html"><![CDATA[the first step in developing GoM, to sketch what I will do and the most abstract ideas]]></summary></entry><entry><title type="html">Graph-of-Models - Literature Review 3 - and they call LLM and KG</title><link href="https://vtrnnhlinh.github.io/blog/2025/gom-literature-review-2/" rel="alternate" type="text/html" title="Graph-of-Models - Literature Review 3 - and they call LLM and KG"/><published>2025-07-11T07:45:00+00:00</published><updated>2025-07-11T07:45:00+00:00</updated><id>https://vtrnnhlinh.github.io/blog/2025/gom-literature-review-2</id><content type="html" xml:base="https://vtrnnhlinh.github.io/blog/2025/gom-literature-review-2/"><![CDATA[<p>Bro, hear me out. I feel like my <a href="https://vtrnnhlinh.github.io/blog/tag/gom/">Graph-of-Models</a> dream is falling apart. There is a field called <strong>LLM+KG</strong> seems very close to my idea, I think it worth to see what is it.</p> <p>After a day, I figure out that I can deploy my idea extending from this one to maximize the efficient of input data and methods to do the logic.</p> <h2 id="surveys">Surveys</h2> <h3 id="what-is-llmkg">What is LLM+KG?</h3> <p>LLM or <strong>Large Language Models</strong> is the hype of the world nowadays with the appearance of ChatGPT, Gemini or Bing AI (I heard about a shit called “vibe-coding” based on Claude but don’t pay attention to it yet). To me it’s a bunch of <code class="language-plaintext highlighter-rouge">tensorflow</code> files and <code class="language-plaintext highlighter-rouge">json</code> files <em>eyes roll</em>.</p> <p>KG or <strong>Knowledge Graph</strong> is a structure represents the entity and its description, for the better data integration and insights <a class="citation" href="#hogan2021knowledge">(Hogan et al., 2021)</a>.</p> <h3 id="why-llmkg">Why LLM+KG?</h3> <p>Based on the survey <a class="citation" href="#pan2024unifying">(Pan et al., 2024)</a>, the combination of LLM and KG is very promising. They can fix each other’s cons with their pros.</p> <p>According to the authors, there will be 3 types of framework developing in this direction:</p> <ol> <li><strong>KG-enhanced LLMs</strong>: incorporate KGs during pre-training to boost the power of LLMs</li> <li><strong>LLM-augmented KGs</strong>: using the power of LLM for various KG tasks</li> <li><strong>Synergized LLMs + KG</strong>: bidirectional reasoning to enhance both</li> </ol> <p>After surfing for a while, with the main resource is <a href="https://github.com/XiaoxinHe/Awesome-Graph-LLM">XiaoxinHe/Awesome-Graph-LLM</a>, I use 3 more works to research, they are: <a class="citation" href="#cheng2024call">(Cheng et al., 2024)</a>, <a class="citation" href="#zhang2024extract">(Zhang &amp; Soh, 2024)</a> and <a class="citation" href="#jiang2024kg">(Jiang et al., 2024)</a>. Beside <a class="citation" href="#du2024large">(Du et al., 2024)</a> I already talked about in <a href="https://vtrnnhlinh.github.io/blog/2025/gom-literature-review-1/">previous post</a>, we will create a table to compare the work:</p> <p>Table: Comparison between 4 chosen works.</p> <table> <thead> <tr> <th>Metric</th> <th>GaCLLM <a class="citation" href="#du2024large">(Du et al., 2024)</a></th> <th>ReaDi <a class="citation" href="#cheng2024call">(Cheng et al., 2024)</a></th> <th>EDC <a class="citation" href="#zhang2024extract">(Zhang &amp; Soh, 2024)</a></th> <th>KG-FIT <a class="citation" href="#jiang2024kg">(Jiang et al., 2024)</a></th> </tr> </thead> <tbody> <tr> <td>Problem &amp; Methodology</td> <td>GCN-based LLM adaptation</td> <td>Structured reasoning refinement</td> <td>LLM-to-Graph + Retrieval-Augmented Generation</td> <td>Hierarchical graph fine-tuning</td> </tr> <tr> <td>Code Structure</td> <td>No code</td> <td>Well-structured</td> <td>Structured, but dataset issues</td> <td>Decent structure, nothing remarkable</td> </tr> <tr> <td>Reputation</td> <td>15 citations</td> <td>23 citations / 12 GitHub stars</td> <td>52 citations / 122 GitHub stars</td> <td>11 citations / 112 GitHub stars</td> </tr> <tr> <td>Last Update</td> <td>404 Not Found</td> <td>~1 year ago</td> <td>11 months ago</td> <td>9 months ago</td> </tr> </tbody> </table> <p>So in this post, we will focus on <strong>edc</strong> <a class="citation" href="#zhang2024extract">(Zhang &amp; Soh, 2024)</a> and <strong>KG-FIT</strong> <a class="citation" href="#jiang2024kg">(Jiang et al., 2024)</a>.</p> <h2 id="edc">edc</h2> <p>In the current development of <strong>edc</strong> <a class="citation" href="#zhang2024extract">(Zhang &amp; Soh, 2024)</a>, it’s likely that the work is <strong>LLM-augmented KGs</strong>, but I believe there is potential to make it <strong>Synergized LLMs + KG</strong>. The purpose of this work is automatically create KGs to make it applicable when doing real-world application. This work proposes a framework has 3 steps: <strong>Extract-Define-Canonicalize</strong>.</p> <ul> <li><strong>Extract</strong>: take information from the dataset and convert them into a relation triplet <code class="language-plaintext highlighter-rouge">[Object A, Relationship of A and B, Object B]</code>.</li> <li><strong>Define</strong>: write the definition for each component of the schema.</li> <li><strong>Canonicalize</strong>: use the schema definition from <strong>Define</strong> step to standardize the triplets.</li> </ul> <p>The <strong>Schema Retriever</strong> of this work is what makes me impressed. It’s a trained model specialized in extracting schema components relevant to input text. This work divides step by step, in which step you can use a different model. It’s challenging but also a great chance to tailor-make and optimize the workflow.</p> <h2 id="kg-fit">KG-FIT</h2> <p>KG-FIT or <strong>Knowledge Graph - Finetuning</strong> <a class="citation" href="#jiang2024kg">(Jiang et al., 2024)</a> has a different mindset to <strong>edc</strong> <a class="citation" href="#zhang2024extract">(Zhang &amp; Soh, 2024)</a>. It focuses on fine-tuning or having a powerful LLM to improve the KG. The steps are less complex, the step to process the input data is also more easier for the devs. My concern is the graph traversing and the size of LLM as my resource isn’t enough to fine-tune a large model.</p> <p>Maybe because I am already fall into <strong>edc</strong> so I am less investigated in this work.</p> <hr/> <p>I feel like I can integrate <strong>edc</strong> into my next action :&gt;</p>]]></content><author><name></name></author><category term="Linh-the-Engineer"/><category term="cse"/><category term="ml"/><category term="gom"/><category term="english"/><summary type="html"><![CDATA[Bro, hear me out. I feel like my Graph-of-Models dream is falling apart. There is a field called LLM+KG seems very close to my idea, I think it worth to see what is it.]]></summary></entry><entry><title type="html">June 2025 Reading Log</title><link href="https://vtrnnhlinh.github.io/blog/2025/june-25-reading-log/" rel="alternate" type="text/html" title="June 2025 Reading Log"/><published>2025-07-06T17:30:00+00:00</published><updated>2025-07-06T17:30:00+00:00</updated><id>https://vtrnnhlinh.github.io/blog/2025/june-25-reading-log</id><content type="html" xml:base="https://vtrnnhlinh.github.io/blog/2025/june-25-reading-log/"><![CDATA[<p>It was a hard time for myself, after going to work I barely have energy to read. So I am grateful that I finished “White Nights” by Fyodor Dostoevsky.</p> <p>But don’t worry, I will have a lot of things to continue this series as I have my <a href="https://vtrnnhlinh.github.io/blog/2025/my-first-ereader/">Kobo</a>.</p> <p>(I said like I have readers, lol)</p> <h2 id="3-white-nights---fyodor-dostoevsky">3. White Nights - Fyodor Dostoevsky</h2> <p>The edition I bought actually has 3 short stories of Fyodor, instead of only White Nights. How I can say, the story is deadly hopeless romantic, the writing methods are brilliant, the translations are beautiful.</p> <p>I can feel and share with the characters of his stories. The relationships are complex and beautiful, the stories inside them are human-like.</p> <blockquote> <p>“My God, a moment of bliss. Why, isn’t that enough for a whole lifetime?”</p> </blockquote> <p>Rate: :star::star::star::star:</p>]]></content><author><name></name></author><category term="Journal-of-Sciences"/><category term="books"/><category term="english"/><summary type="html"><![CDATA[It was a hard time for myself, after going to work I barely have energy to read. So I am grateful that I finished “White Nights” by Fyodor Dostoevsky.]]></summary></entry><entry><title type="html">my first ereader - Kobo Clara Colour</title><link href="https://vtrnnhlinh.github.io/blog/2025/my-first-ereader/" rel="alternate" type="text/html" title="my first ereader - Kobo Clara Colour"/><published>2025-07-05T15:15:00+00:00</published><updated>2025-07-05T15:15:00+00:00</updated><id>https://vtrnnhlinh.github.io/blog/2025/my-first-ereader</id><content type="html" xml:base="https://vtrnnhlinh.github.io/blog/2025/my-first-ereader/"><![CDATA[<p>I am very happily to announce that, after months of wanting to have an ereader, I finally have one: <a href="https://gl.kobobooks.com/de/products/kobo-clara-colour">Kobo Clara Colour</a>.</p> <p>I bought an used one from a cute girl. The conditions of the Kobo is very good, excellent :laughing:</p> <hr/> <h2 id="reading-experience">Reading Experience</h2> <p>I tried to use <a href="https://github.com/pgaskin/NickelMenu">NickelMenu</a> and <a href="https://github.com/koreader/koreader">KOReader</a> but feels not so suitable with myself. I keep the vanilla version.</p> <p>The tip that you will read the KOReader tutorial first, then NickelMenu tutorial to install.</p> <p>This Feature Settings is <strong>must-have</strong>:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="pi">[</span><span class="nv">FeatureSettings</span><span class="pi">]</span>
<span class="s">ExcludeSyncFolders=(\\.(?!kobo|adobe).+|([^.][^/]*/)+\\..+)</span>
</code></pre></div></div> <h3 id="vanilla-settings">Vanilla settings</h3> <ul> <li>Natural Light settings is a great one, I set <strong>AUTO</strong> with bedtime is 10PM</li> <li><strong>Pocket</strong> will be ended its lifetime soon, so I suggest you not to bother about it.</li> </ul> <h3 id="screensavers">Screensavers</h3> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/kobo_screensaver-480.webp 480w,/assets/img/kobo_screensaver-800.webp 800w,/assets/img/kobo_screensaver-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/kobo_screensaver.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>My screensavers! Here Rin from Laid-Back Camp.</p> <p>The dimension for you is <code class="language-plaintext highlighter-rouge">1072x1488</code>. Here is your guide:</p> <ol> <li>Connect your Kobo with your computer</li> <li>Get into <code class="language-plaintext highlighter-rouge">.kobo</code> folder and create a folder named <code class="language-plaintext highlighter-rouge">screensaver</code></li> <li>Put your pictures into with <code class="language-plaintext highlighter-rouge">1072x1488</code> dimension and <code class="language-plaintext highlighter-rouge">.png</code> shortcut</li> <li>Eject and voila~</li> </ol> <h3 id="notations">Notations!</h3> <p>There are two types of markings in Kobo. First is highlight and second you can mark the whole page. To whole page, you tap the right upper corner. About highlight, we have 4 colors: yellow, purple, blue and green.</p> <ul> <li><strong>Yellow</strong>: main points and ideas of the book.</li> <li><strong>Purple</strong>: Romantic moments :3</li> <li><strong>Blue</strong>: Interesting points but not directly related to the content of the books</li> <li><strong>Green</strong>: Interesting information that I want to proofcheck or dig deeper, like a name of a book or some human.</li> </ul> <h2 id="ebooks">Ebooks!</h2> <p>I prioritize <code class="language-plaintext highlighter-rouge">,epub</code> format with a lot of pirate ahoy sites. But of course as an old soul, I can find a lot of books I need at <a href="https://www.gutenberg.org/">Project Gutenberg</a>.</p> <p>My Ereader has no problems with reading mangas, but the native reader of Kobo doesn’t support the metadata of <code class="language-plaintext highlighter-rouge">.cbz</code> files, which prevented me to use it, I can’t stand “Unknown Author” :triumph:.</p> <p>To send books to your Kobo, use <a href="https://calibre-ebook.com/">Calibre</a>, you can fetch metadata and book cover from it!</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/kobo_and_fiio-480.webp 480w,/assets/img/kobo_and_fiio-800.webp 800w,/assets/img/kobo_and_fiio-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/kobo_and_fiio.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>A night of blissful weekend</p>]]></content><author><name></name></author><category term="Journal-of-Sciences"/><category term="books"/><category term="nerdies"/><category term="english"/><summary type="html"><![CDATA[some random thoughts about my first ereader]]></summary></entry><entry><title type="html">Graph-of-Models - Literature Review 2 - GaCLLM</title><link href="https://vtrnnhlinh.github.io/blog/2025/gom-literature-review-1/" rel="alternate" type="text/html" title="Graph-of-Models - Literature Review 2 - GaCLLM"/><published>2025-07-01T06:30:00+00:00</published><updated>2025-07-01T06:30:00+00:00</updated><id>https://vtrnnhlinh.github.io/blog/2025/gom-literature-review-1</id><content type="html" xml:base="https://vtrnnhlinh.github.io/blog/2025/gom-literature-review-1/"><![CDATA[<p>In this second part, we will focus mainly on GaCLLM <a class="citation" href="#du2024large">(Du et al., 2024)</a> and my new take on the system I imagined after digging deeper the work.</p> <p>Read the previous part here: <a href="https://vtrnnhlinh.github.io/blog/2025/gom-literature-review-0/">Graph-of-Models - The First Literature Review</a>.</p> <hr/> <h2 id="gacllm">GaCLLM</h2> <p>In this work, authors proposed 4 main modules:</p> <ul> <li>Conduct SFT (Supervised Fine-tuning) for the LLM</li> <li>Propose LLM-based graph-aware convolutional inference</li> <li>Align and fuse generated description into graph-based embeddings</li> <li>Introduce the objective function and learning process</li> </ul> <h3 id="supervised-fine-tuning">Supervised Fine-tuning</h3> <p>In first stage, they fine-tune LLM with domain-specific data. This involves training of LLM with descriptions from matched user-item pairs. They will construct the prompt template for items. The optimization process involves minimizing the negative log-likelihood loss for these templates.</p> <p>They adopt LoRa <a class="citation" href="#hu2022lora">(Hu et al., 2022)</a> for parameter-efficient learning to improve time and computational efficiency.</p> <h3 id="llm-based-convolutional-inference-in-graph">LLM-based Convolutional Inference in Graph</h3> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/graphs_gacllm-480.webp 480w,/assets/img/graphs_gacllm-800.webp 800w,/assets/img/graphs_gacllm-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/graphs_gacllm.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>My understanding about proposed graphs.</p> <p>The graph will be $G = (V, E)$ with $V$ are the users and items. The edges $E$ are constructed by the interactions between users and items. Each node has a textual description.</p> <p>We have prompt template to rewrite/generate the description of users and items. Let call it $PROMPT_{user}$ and $PROMPT_{item}$.</p> <p>To improve the quality of descriptions <strong>for users</strong>, we will rewrite user’s raw description $T_u$ by,</p> \[T'_u = LLM(PROMPT_{user}(T_u, \{T_i:(u,i) \in E\})),\] <p>Similarity, to improve the quality of descriptions <strong>for items</strong>, we will rewrite user’s raw description $T_i$ by,</p> \[T'_i = LLM(PROMPT_{item}(T_i, \{T_u:(u,i) \in E\})),\] <p>To do this, they enhance the layers by running LLM in a loop with first layer is the raw input. LLM now is taking the role as an “aggregator” in the graph convolutional processing. After $L$ interations, we obtain different layers of user and item descriptions for both users and items.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/token_llm-480.webp 480w,/assets/img/token_llm-800.webp 800w,/assets/img/token_llm-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/token_llm.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>Different ways for token usage in LLMs <a class="citation" href="#du2024large">(Du et al., 2024)</a>.</p> <p>They claim the proposed LLM-based convolutional strategy has 2 main strengths:</p> <ul> <li>High quality descriptions of users and items in a least-to-most manner</li> <li>Effectively capture graph-related info with limited context of length <ul> <li>Break down the task of description enhancement into multiple steps</li> <li>Each step (layer) only integrates the descriptions of one-decrease in the number of tokens needed</li> </ul> </li> <li>Efficiently alleviate the redundancy of describing the graph for target nodes</li> </ul> <h3 id="aligning-gcn-based-embeddings-for-recommendation">Aligning GCN-based Embeddings for Recommendation</h3> <p>To bridge text info and structural info, they align the descriptions of users and items with their <strong>embeddings</strong> in a unified manner.</p> <p>First layer represents the initial step for both users’ and items’ representation. Each user and item will associated with the embedding from a specific ID. Then they encode them into the constant text-based embedding by encoder.</p> <p>There will be an <em>objective function</em> to measure the matching scores between users and items for final predictions.</p> <h2 id="some-of-thoughts">Some of Thoughts</h2> <p>I am still confused and not clarify my idea yet. Do you have any thoughts? But I guess re-enact the work of GaCLLM will be interesting.</p> <p>This afternoon I will have a meeting with my team to discuss about this, I will update the progress in upcoming posts.</p>]]></content><author><name></name></author><category term="Linh-the-Engineer"/><category term="cse"/><category term="ml"/><category term="gom"/><category term="english"/><summary type="html"><![CDATA[the second literature review of my series writting about my work I called Graph-of-Models]]></summary></entry><entry><title type="html">Graph-of-Models - Literature Review 1 - Transformer and MoH</title><link href="https://vtrnnhlinh.github.io/blog/2025/gom-literature-review-0/" rel="alternate" type="text/html" title="Graph-of-Models - Literature Review 1 - Transformer and MoH"/><published>2025-06-27T11:30:00+00:00</published><updated>2025-06-27T11:30:00+00:00</updated><id>https://vtrnnhlinh.github.io/blog/2025/gom-literature-review-0</id><content type="html" xml:base="https://vtrnnhlinh.github.io/blog/2025/gom-literature-review-0/"><![CDATA[<p>At work I am assigned to learn about Mixture-of-Experts (MoE) but my mentor wants another specific, tailor-made approach to our problem.</p> <p>I name it <strong>Graph-of-Models</strong> (GoM).</p> <p>I have a vague idea in my mind but I think I need a <strong>Literature Review</strong> to make my idea becomes realistic as most as possible.</p> <p>However, I don’t follow the ordinary literature review in academic research, as I am working in industry. I will try to adapt and build the code along the way.</p> <p>This is a series of posts about this project, and this first post is about 2 first literature review of mine.</p> <h2 id="plan">Plan</h2> <p>In my first plan, I want to use MoH structure <a class="citation" href="#jin2024moh">(Jin et al., 2024)</a> as the base development. Then I will apply the experts network based on <a class="citation" href="#du2024large">(Du et al., 2024)</a>.</p> <p>The Python project structure I apply is the <a href="https://github.com/navdeep-G/samplemod">navdeep-G/samplemod</a>.</p> <p>The training framework will be Megatron-LM <a class="citation" href="#shoeybi2019megatron">(Shoeybi et al., 2019)</a> with continual, meta and multi-task learning. Federated Learning will be developed when the application is deployed for many users.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/plan_llm-480.webp 480w,/assets/img/plan_llm-800.webp 800w,/assets/img/plan_llm-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/plan_llm.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>My imagined structure.</p> <h2 id="attention-is-all-you-need">Attention is all you need!!</h2> <p>We will start from <code class="language-plaintext highlighter-rouge">Transformer</code> Structure <a class="citation" href="#vaswani2017attention">(Vaswani et al., 2017)</a>.</p> <p>I am pretty bad at Python, so I will learn and reference a lot of repositories, both in how they structure the file and the coding methodology.</p> <p>I reference <a href="https://github.com/SCCSMARTCODE/attention-is-all-you-need-from-scratch">SCCSMARTCODE/attention-is-all-you-need-from-scratch</a> and <a href="https://github.com/jadore801120/attention-is-all-you-need-pytorch">jadore801120/attention-is-all-you-need-pytorch</a> to re-made the <code class="language-plaintext highlighter-rouge">transformer</code> structure.</p> <p><code class="language-plaintext highlighter-rouge">Transformer</code> is an architecture rely entirely on an attention mechanism to draw <strong>global dependencies</strong> between I/O. <code class="language-plaintext highlighter-rouge">Transformer</code> allows significantly more parallelization.</p> <p>I believe my wanted structure is far from this work, but a thousand miles start from a step.</p> <h3 id="encoder--decoder">Encoder &amp; Decoder</h3> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/attention_architecture-480.webp 480w,/assets/img/attention_architecture-800.webp 800w,/assets/img/attention_architecture-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/attention_architecture.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p><code class="language-plaintext highlighter-rouge">Transformer</code> architecture. Source: <a class="citation" href="#vaswani2017attention">(Vaswani et al., 2017)</a>.</p> <p>With the illustration, you can see the <code class="language-plaintext highlighter-rouge">Transformer</code> has 2 main modules are <strong>Encoder</strong> and <strong>Decoder</strong>. There is also something worth noticing is <strong>Positional Encoding</strong>.</p> <p><strong>Encoder</strong> and <strong>Decoder</strong> has a stack of $N=6$ layer. Encoder’s layer has 2 sub-layers:</p> <ul> <li>Multi-Head Attention</li> <li>Feed Forward</li> </ul> <p>While Decoder’s layer has 3 sub-layers:</p> <ul> <li>Multi-Head Attention</li> <li>Feed Forward</li> <li>Masked Multi-Head Attention</li> </ul> <p>We employ residual connection around each of sub-layers, followed by layer normalization. The dimension is $d_{model} = 512$.</p> <h3 id="attention">Attention</h3> <p>To me, this is the heart of this work.</p> <p>Attention function is mapping a query and a set of key-value pairs to vectors output.</p> <ul> <li>Output is weighted sum of values</li> <li>The weight has another compatibility function to calculate</li> </ul> <h4 id="scaled-dot-product-attention">Scaled Dot-Product Attention</h4> <ul> <li>Input: <ul> <li><strong>Q</strong>: queries</li> <li><strong>K</strong>: keys of dimension $d_k$</li> <li><strong>V</strong>: values of dimension $d_v$</li> </ul> </li> </ul> \[Attention (Q,K,V) = softmax(\frac{QK^T}{\sqrt{d_k}})V\] <ul> <li>$\frac{1}{\sqrt{d_k}}$: scaling factor. Why? To avoid <code class="language-plaintext highlighter-rouge">softmax</code> is pushed into regions result extremely small gradients</li> <li><strong>Dot-product attention</strong> faster and more space-efficient in practice than <strong>additive attention</strong></li> </ul> <h4 id="multi-head-attention">Multi-Head Attention</h4> <p>They perform the attention function in parallel, yielding $d_v$-dim output values. They are concatenated and projected, make final values.</p> <p>\(MultiHead(Q,K,V) = Concat(head_1,.... head_n)W^O\) \(head_i = Attention(QW^Q_i, KW^K_i, VW^V_i)\)</p> <h4 id="attention-in-transformer">Attention in Transformer</h4> <p>We will remind the input of attention. We will have Q (Queries), K (keys) and V (values). <code class="language-plaintext highlighter-rouge">Transformer</code> uses attention in 3 ways:</p> <ul> <li>“encoder-decoder attention” layer: Q from previous decoder layer, K, V from output of encoder.</li> <li>“encoder self-attention” layer: Q, K, V from previous encoder layer.</li> <li>“decoder self-attention” layer: Similar to encoder one, however they masked out all values in the input of <code class="language-plaintext highlighter-rouge">softmax</code> (set to $-\infty$) in scaled dot-product attention to illegal connections.</li> </ul> <h3 id="position-wise-feed-forward-networks">Position-wise Feed-Forward Networks</h3> <p>FFN has 2 linear transformations with a ReLU activation<d-footnote>Rectified Linear Unit (ReLU) is a piecewise linear function that outputs the input directly if it is positive; otherwise, it outputs zero</d-footnote>:</p> \[FFN(x) = max(0, xW_1+b_1)W_2 +b_2\] <h3 id="positional-encoding">Positional Encoding</h3> <p>This is the method to inject information about the relative or absolute position of the tokens in the sequence. <strong>Positional Encoding</strong> has the same dimension $d_{model}$ as the embeddedings. In this work, they use sine and cosine functions</p> \[PE_{(pos, 2i)} = sin(pos/10000^{2i/d_{model}})\] \[PE_{(pos, 2i+1)} = cos(pos/10000^{2i/d_{model}})\] <h2 id="moh-mixture-of-heads">MoH (Mixture-of-Heads)</h2> <p>In my understanding, MoH <a class="citation" href="#jin2024moh">(Jin et al., 2024)</a> is a mix of Mixture-of-Experts (MoE) and <code class="language-plaintext highlighter-rouge">transformer</code> <a class="citation" href="#vaswani2017attention">(Vaswani et al., 2017)</a>.</p> <p>They made 2 important changes, one, there is a TopK router to activate heads for each token. They also replace the standard summation in multi-head attention to weighted sum.</p> <p>They believe that with changes, they made 2 significant advantages:</p> <ul> <li>First, allows each token select most relevant attention heads, improve efficiency without sacrificing accuracy or increasing the params.</li> <li>Second, with weighted sum, MoH enhances the flexibility of attention mechanism.</li> </ul> <h3 id="design">Design</h3> <p>The core of the work is <strong>MoH</strong>, which treats attention heads as experts.</p> \[MoH(X, X') = \sum^h_{i=1} g_i H^i W^i_O\] <ul> <li>$X, X’$: input tokens</li> <li>$g_i$: routing score</li> <li>$H^i$: Head ith</li> <li>$W^i_O$: output of projection matrix</li> </ul> <p>Inspired by DeepSeek <a class="citation" href="#dai2024deepseekmoe">(Dai et al., 2024)</a>, MoH designs a subset of heads as <strong>shared heads</strong> that remain always activated. This will consolidate common knowledge within shared heads.</p> <p><strong>Two-Stage Routing</strong> for dynamically balance the weights between shared and routed heads. Routing scores are determined by both the <strong>score of each individual head</strong> and <strong>score associated with the head type</strong>. To avoid the unbalanced load, MoH applies <strong>Load Balance Loss</strong>.</p> <h3 id="training">Training</h3> <p>Training LLMs from scratch, they use Megatron-LM <a class="citation" href="#shoeybi2019megatron">(Shoeybi et al., 2019)</a> with public datasets.</p> <p>With Continual Learning, they tuned <code class="language-plaintext highlighter-rouge">LLaMA3-8B</code>. 3 challenges when doing this:</p> <ol> <li>Determine the shared attention heads</li> <li>Add head routers</li> <li>Weight attention heads</li> </ol> <hr/> <p>That’s all for the day. The next post I will discuss about GaCLLM and how I imagine the system will work.</p>]]></content><author><name></name></author><category term="Linh-the-Engineer"/><category term="cse"/><category term="ml"/><category term="gom"/><category term="english"/><summary type="html"><![CDATA[the first literature review of my series writting about my work I called Graph-of-Models]]></summary></entry><entry><title type="html">My Life Setup - Summer 2025</title><link href="https://vtrnnhlinh.github.io/blog/2025/my-life-setup-summer-25/" rel="alternate" type="text/html" title="My Life Setup - Summer 2025"/><published>2025-06-26T17:30:00+00:00</published><updated>2025-06-26T17:30:00+00:00</updated><id>https://vtrnnhlinh.github.io/blog/2025/my-life-setup-summer-25</id><content type="html" xml:base="https://vtrnnhlinh.github.io/blog/2025/my-life-setup-summer-25/"><![CDATA[<p>When I write this, my life is a mess. I am drown in endless fantasies. I write to encourage and clarify for myself. I hope that I can follow what I expect here.</p> <h2 id="routines-tasks-and-mental-health">Routines, Tasks and Mental Health</h2> <h3 id="routineflow">RoutineFlow</h3> <ul> <li>Platform: Android</li> <li>Download: <a href="https://routineflow.app/">RoutineFlow App</a></li> </ul> <p>I highly recommend this app, the author is GOAT. I have used this app since beta, and purchased its lifetime premium after that shortly.</p> <p>Its clean UI and concept attract me greatly. If you have read <a href="https://jamesclear.com/atomic-habits">Atomic Habit</a> and want to have an app implemented to work with the principles of this book, this app is for you.</p> <p>The app is improved through the time, now it is really polished and smooth with template routines and widget.</p> <p>I use this app for morning and evening routine, mainly for personal hygiene and calm myself down.</p> <h3 id="ticktick">TickTick</h3> <ul> <li>Platform: Cross-Platform</li> <li>Download: <a href="https://ticktick.com/r?c=pfdhlnyn">TickTick</a></li> </ul> <p>The ultimate core of my system. I have use TickTick for more than 2 years, even though I have slacked off recently. But I am going to renew the yearly subcription soon! I use TickTick for everything and trust me bro, it’s the best app out there.</p> <p>The features are rolled out frequently, the price is acceptable, it is all-in-one you need! Task lists, Timer, Calendar, Habits and now is Countdown!</p> <p>Some people complaint about the UI but I feel it’s okay?</p> <ul> <li>Some tips and guides from TickTick Blog: <a href="https://www.ticktick.com/resources">TickTick Resources</a></li> </ul> <h3 id="tochi">Tochi</h3> <ul> <li>Platform: Android</li> <li>Download: <a href="https://play.google.com/store/apps/details?id=com.lazyhippo.tochidiary&amp;hl=en-US&amp;pli=1">Tochi</a></li> </ul> <p>It is my Mood tracker, I also bought its lifetime premium. I love one-time payment app 😆 It’s cute, has tags, can attach images and the orbs are cute.</p> <p>I can track my mood a lot of time through the day. Some apps only allow an input a day.</p> <h3 id="1money">1Money</h3> <ul> <li>Platform: Android</li> <li>Download: <a href="https://play.google.com/store/apps/details?id=org.pixelrush.moneyiq">1Money</a></li> </ul> <p>As I researched it seems has some drama around the app? But tbh I don’t care, the app is solid enough to track your money expense. The UI is clean and the functions is enough.</p> <h2 id="self-study">Self-Study</h2> <h3 id="chatgpt">ChatGPT</h3> <ul> <li>Platform: Cross-Platform</li> <li>Download: Everyone knows it 😄</li> </ul> <p>I guess this is kinda like a love-hate relationship? Sometimes I feel I depend on it, sometimes it helped me a lot. Recently, I find out I can be open with it more! I have spent a lot of my time talking with AI, from AI chatbot service for your fantasies to AI like BingAI or ChatGPT. I think that using it as an assistant, you provide options, I am the one who decide is good.</p> <h3 id="obsidian">Obsidian</h3> <ul> <li>Platform: Cross-Platform</li> <li>Download: <a href="https://obsidian.md/download">Obsidian</a></li> </ul> <p>It’s a famous and powerful free tool. It’s very beneficial when you know Markdown and community plugins. I can sync my Zotero notes with Obsidian. But ye, after finishing the Thesis, I deleted Zotero lol.</p> <p>I think beside storing your notes with easy markdown, I love the Spaced Repition of Obsidian. Unlike Anki, which I usually don’t like because the flashcards can be out of context, I can make flashcards from my note with Obsidian. Works very well tho.</p> <h3 id="languages">Languages</h3> <p>For English, my biggest problem is Speaking Skill. I use <a href="https://play.google.com/store/apps/details?id=us.nobarriers.elsa&amp;hl=vi&amp;gl=US&amp;pli=1"><strong>Elsa Speak</strong></a> for this. I have a Lifetime Elsa Pro account. The Premium version has AI features but I don’t think it’s necessary. I only need to enhance my pronunciation.</p> <p>And with German, beside having a small textbook, I also use <a href="https://www.memrise.com/">Memrise</a>, again, a lifetime premium account. Memrise has a lot of updates recently, I think it’s a solid app. I also used Busuu before, but after the yearly subcription, I didn’t extend it. Just because I am lazy, not because of the app. I think it’s also a good app for you to try. Duolingo? I stop using Duolingo as the free version is so limited and frustrated.</p> <h3 id="mooc">MOOC</h3> <p>Coursera is my go-to solution as I bought a Plus subcription :laughing:. I think it’s more academic than Udemy. I have Harmonica and Calculus courses on Udemy but haven’t finished (yet).</p> <p>I have some Python-related and Embedded Systems-related courses on Coursera right now. Hopefully I can finish some in this summer.</p> <h2 id="work">Work</h2> <p>Here I am, in the ecosystem of Microsoft.</p> <h3 id="ms-todo">MS Todo</h3> <p>MS Todo is a poor todo app to me comparing to my dear Ticktick. But it’s also not so bad with My Day feature. I guess it’s the only thing TickTick should adapt, Do Day is different than Due Day.</p> <p>Also, when you flag an Outlook email, it will appear in Todo, which helps you keep track of emails you need to take action.</p>]]></content><author><name></name></author><category term="Linh-the-Engineer"/><category term="cse"/><category term="languages"/><category term="plans"/><category term="english"/><summary type="html"><![CDATA[my routines and tools used for summer 2025]]></summary></entry><entry><title type="html">Tutorial - Megatron-SWIFT and Qwen2.5 Installation</title><link href="https://vtrnnhlinh.github.io/blog/2025/megatron-swift-installation/" rel="alternate" type="text/html" title="Tutorial - Megatron-SWIFT and Qwen2.5 Installation"/><published>2025-06-24T09:45:00+00:00</published><updated>2025-06-24T09:45:00+00:00</updated><id>https://vtrnnhlinh.github.io/blog/2025/megatron-swift-installation</id><content type="html" xml:base="https://vtrnnhlinh.github.io/blog/2025/megatron-swift-installation/"><![CDATA[<p>This tutorial based a lot on my experience with my company’s servers. So maybe there is some things not applicable in your case. Leave comment if you need anything to discuss.</p> <h2 id="purpose">Purpose</h2> <p>I am trying to fine-tunning a model with Mixture-of-Experts (MoE) <a class="citation" href="#sanseviero2023moe">(Sanseviero et al., 2023)</a> methodology. I choose <strong>Megatron-LM</strong> <a class="citation" href="#shoeybi2019megatron">(Shoeybi et al., 2019)</a> and <strong>SWIFT</strong> <a class="citation" href="#zhao2025swift">(Zhao et al., 2025)</a> as the framework.</p> <p>The tutorial I am following is: <a href="https://swift.readthedocs.io/en/latest/Instruction/Megatron-SWIFT-Training.html">Megatron-SWIFT Training</a>.</p> <h2 id="prerequisites">Prerequisites</h2> <ul> <li>Operating System: <strong>Linux</strong></li> <li><strong>Python</strong> should be pre-installed. Check if your OS already has Python. <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python3 <span class="nt">--version</span>
</code></pre></div> </div> </li> <li>If your OS doesn’t have Python yet, run below commands to install (this apply for Ubuntu, if you use different distro, google the tutorial for your OS). <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>python3 python3-pip
</code></pre></div> </div> </li> <li>Using virtual environment is a good practice for Python, I use <code class="language-plaintext highlighter-rouge">anaconda</code> for this. Follow <a href="https://docs.conda.io/projects/conda/en/latest/user-guide/install/linux.html">this guide</a> to install <code class="language-plaintext highlighter-rouge">anaconda</code> on Linux.</li> <li>If you want to train with GPU, you need to install <code class="language-plaintext highlighter-rouge">cuda</code>: <a href="https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html">CUDA Installation Guide for Linux</a>. <strong>Recommended version</strong>: <code class="language-plaintext highlighter-rouge">12.1.0</code>.</li> <li>With this framework, you also need to install <code class="language-plaintext highlighter-rouge">cuDNN</code>: <a href="https://docs.nvidia.com/deeplearning/cudnn/installation/latest/linux.html">Installing cuDNN Backend on Linux</a>. <strong>Recommended version</strong>: <code class="language-plaintext highlighter-rouge">9</code>.</li> </ul> <h2 id="install-megatron-swift">Install Megatron-SWIFT</h2> <p>First, we will create a virtual environment with <code class="language-plaintext highlighter-rouge">conda</code>:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda create <span class="nt">--name</span> &lt;ENV_NAME&gt; <span class="nv">python</span><span class="o">=</span>3.10
conda activate &lt;ENV_NAME&gt;
</code></pre></div></div> <p>Then we will install <code class="language-plaintext highlighter-rouge">pytorch</code> and <code class="language-plaintext highlighter-rouge">torchvision</code> first.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pip <span class="nb">install </span><span class="nv">pytorch</span><span class="o">==</span>2.3.0 <span class="nv">torchvision</span><span class="o">==</span>0.18.0
</code></pre></div></div> <p>Next we need to install <code class="language-plaintext highlighter-rouge">apex</code>, <code class="language-plaintext highlighter-rouge">transformer-engine</code>, and <code class="language-plaintext highlighter-rouge">ms-swift</code>.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/NVIDIA/apex
<span class="nb">cd </span>apex
pip <span class="nb">install</span> <span class="nt">-v</span> <span class="nt">--disable-pip-version-check</span> <span class="nt">--no-cache-dir</span> <span class="nt">--no-build-isolation</span> <span class="nt">--config-settings</span> <span class="s2">"--build-option=--cpp_ext"</span> <span class="nt">--config-settings</span> <span class="s2">"--build-option=--cuda_ext"</span> ./
pip <span class="nb">install </span>transformer-engine
pip <span class="nb">install </span>ms-swift
</code></pre></div></div> <h2 id="download-qwen25">Download Qwen2.5</h2> <h3 id="install-git-lfs">Install <code class="language-plaintext highlighter-rouge">git lfs</code></h3> <p>Check availability of <code class="language-plaintext highlighter-rouge">git</code> and <code class="language-plaintext highlighter-rouge">git lfs</code>.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git <span class="nt">--version</span>
git lfs version
</code></pre></div></div> <p>If your enviroment still not have <code class="language-plaintext highlighter-rouge">git-lfs</code> you need to install it</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda <span class="nb">install </span>conda-forge::git-lfs
</code></pre></div></div> <h3 id="clone-model-repo">Clone model repo</h3> <p><strong>Qwen2.5</strong> <a class="citation" href="#qwen2.5">(Team, 2024)</a> is the model I use to train. First we will visit <a href="https://huggingface.co/">HuggingFace</a> to create an account. Then visit <strong>Profile &gt; Access Tokens &gt; Create new token</strong>. Choose <strong>Token Type</strong> is <strong>Write</strong>. Remember to <strong>copy the token</strong>.</p> <p>Return to our activated conda environment. Install <code class="language-plaintext highlighter-rouge">huggingface_hub</code>:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pip <span class="nb">install </span>huggingface_hub
</code></pre></div></div> <p>Then login into your <code class="language-plaintext highlighter-rouge">huggingface</code> token.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>huggingface-cli login <span class="nt">--token</span> &lt;your-token&gt;
</code></pre></div></div> <p>Finally, we can clone the model repo to our folder. Example: <a href="https://huggingface.co/Qwen/Qwen2.5-7B-Instruct">Qwen2.5-7B-Instruct</a></p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd</span> &lt;model folder&gt;
git lfs <span class="nb">install
</span>git clone https://huggingface.co/Qwen/Qwen2.5-7B-Instruct
</code></pre></div></div> <h2 id="test">Test</h2> <p>Create a <code class="language-plaintext highlighter-rouge">test.sh</code> file to run test.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">CUDA_VISIBLE_DEVICES</span><span class="o">=</span>0 <span class="se">\</span>
swift <span class="nb">export</span> <span class="se">\</span>
    <span class="nt">--model</span> &lt;model_dir&gt;/Qwen2.5-7B-Instruct <span class="se">\</span>
    <span class="nt">--to_mcore</span> <span class="nb">true</span> <span class="se">\</span>
    <span class="nt">--torch_dtype</span> bfloat16 <span class="se">\</span>
    <span class="nt">--output_dir</span> Qwen2.5-7B-Instruct-mcore
</code></pre></div></div> <hr/> <p>I am afraid that because I wrote the tutorial after finishing setup, so maybe there is some incompatible version and tweak steps that I forgot. So comment to tell me if you can’t follow the tutorial.</p>]]></content><author><name></name></author><category term="Linh-the-Engineer"/><category term="cse"/><category term="ml"/><category term="moe"/><category term="english"/><summary type="html"><![CDATA[my tutorial to install Megatron-SWIFT to train Qwen2.5 locally]]></summary></entry><entry><title type="html">Mixture-of-Experts - first diggin’</title><link href="https://vtrnnhlinh.github.io/blog/2025/moe-overview/" rel="alternate" type="text/html" title="Mixture-of-Experts - first diggin’"/><published>2025-06-18T08:30:00+00:00</published><updated>2025-06-18T08:30:00+00:00</updated><id>https://vtrnnhlinh.github.io/blog/2025/moe-overview</id><content type="html" xml:base="https://vtrnnhlinh.github.io/blog/2025/moe-overview/"><![CDATA[<p>At Bosch, I have a chance to discover about Machine Learning, specifically LLM and MoE. In this post I will share the content of my first presentation about Mixture-of-Experts (MoE). I take the structure and content mainly from a survey in 2025 <a class="citation" href="#mu2025comprehensive">(Mu &amp; Lin, 2025)</a> and some information from a survey in 2024 <a class="citation" href="#cai2024survey">(Cai et al., 2024)</a>.</p> <blockquote> <p><strong>Disclaimer</strong>: I am very noob in this field, I am not sure what I wrote in this post is true. But if I find out any problems, I will update.</p> </blockquote> <h2 id="why-moe">Why MoE?</h2> <p>AI applications are developing fast, we can say some popular names like ChatGPT, Gemini, DeepSeek,… But developing it also faces some problems, 2 major problems are:</p> <ul> <li>Computational cost of training and deploying</li> <li>Integrating conflicting or heterogeneous knowledge within a single model</li> </ul> <p>So here we are, MoE is proposed to tackle these 2 problems. You can imagine MoE as a “divide-and-conquer” approach.</p> <h2 id="moe-components">MoE components</h2> <p>In MoE structure, we have two main parts: <strong>Experts</strong> and <strong>Router</strong>.</p> <h3 id="router">Router</h3> <p>Router works as a distributor to route data to suitable expert.</p> <p>We have <strong>Gating Function</strong> is the mathematical implementation of the Router. A good Gating Function meets 2 criteria:</p> <ul> <li>Accurately discern characteristics of both input data and experts</li> <li>Distribute evenly as possible among the predefined experts</li> </ul> <p>We can categorise Gating Function into 3 types:</p> <ul> <li><strong>Linear Gating</strong>: Using <code class="language-plaintext highlighter-rouge">softmax</code> function</li> <li><strong>Non-linear Gating</strong>: Using <strong>cosine similarity</strong> in assigning experts</li> <li><strong>Soft MoE</strong>: Combining tokens to avoid dropping tokens issues</li> </ul> <h3 id="experts">Experts</h3> <p>Experts are small LLM models that specialise in solving a defined dataset. The <strong>Experts Network</strong> based on Transformer <a class="citation" href="#vaswani2017attention">(Vaswani et al., 2017)</a> structure.</p> <p>There are 3 popular experts network method:</p> <ul> <li>Replace FFN layer in Transformer with an MoE layer <ul> <li>Suitable to incorporate sparse activation mechanisms</li> <li>Ideal choice for introducing the MoE mechanism</li> </ul> </li> <li>Apply MoE to the attention module in Transformer <ul> <li><strong>MoA</strong> <a class="citation" href="#wang2024moa">(Wang et al., 2024)</a> Mixture-of-Attention – gating network to dynamically select the most relevant attention</li> <li><strong>MoH</strong> <a class="citation" href="#jin2024moh">(Jin et al., 2024)</a> Mixture-of-Head attention – has great potential</li> </ul> </li> <li>Apply MoE to CNN layer <ul> <li>Fully leverage CNN’s strengths in local feature extraction</li> <li>Apply mainly in Computer Vision field</li> </ul> </li> </ul> <h2 id="moe-paths">MoE Paths</h2> <h3 id="routing-strategy">Routing Strategy</h3> <p><strong>Routing Strategy</strong> based on:</p> <ul> <li>Token-Level</li> <li>Modality-Level</li> <li>Task-Level</li> <li>Context-Level</li> <li>Attribute-Level</li> </ul> <h3 id="training-strategy">Training Strategy</h3> <p><strong>Training Strategy</strong> has 3 steps:</p> <ul> <li>Auxiliary Loss Function Design: balance usage and distribute load</li> <li>Expert Selection: choose expert for data input. Some popular methods like <em>TopK, Top1, TopP,…</em></li> <li>Pipeline Design: optimize resource allocation and distribute data among experts</li> </ul> <h2 id="my-current-work">My current work</h2> <p>I am trying to use <a href="https://swift.readthedocs.io/en/latest/Instruction/Megatron-SWIFT-Training.html">Megatron-SWIFT</a> Framework to train <strong>Qwen2.5-7B-Instruct</strong> <a class="citation" href="#qwen2.5">(Team, 2024)</a>. It is really strugging even from first step is setup environment, when have some results, I will write post sharing about that. Hopefully I can write proper tutorial the next time we meet.</p>]]></content><author><name></name></author><category term="Linh-the-Engineer"/><category term="cse"/><category term="ml"/><category term="moe"/><category term="english"/><summary type="html"><![CDATA[my first take when discovering MoE]]></summary></entry><entry><title type="html">I am done my Thesis, so what’s next?</title><link href="https://vtrnnhlinh.github.io/blog/2025/thesis-reflection/" rel="alternate" type="text/html" title="I am done my Thesis, so what’s next?"/><published>2025-06-18T04:00:00+00:00</published><updated>2025-06-18T04:00:00+00:00</updated><id>https://vtrnnhlinh.github.io/blog/2025/thesis-reflection</id><content type="html" xml:base="https://vtrnnhlinh.github.io/blog/2025/thesis-reflection/"><![CDATA[<p>I submitted the hardcover of my Thesis to my Faculty, so what will I do in near future? I once shared some details in <a href="https://vtrnnhlinh.github.io/blog/2024/quantum-first-reflection/">Quantum first reflection</a>.</p> <p>But I think there are a lot of changes comparing to the post, so I will share some details, to clarify myself and give you some more information.</p> <h2 id="past">past</h2> <p>I believe I didn’t contribute much in my Thesis. That it prevents a lot of my vision if I pursue further education. My GPA is also too low in academic standard. I don’t want to struggle financially, to me, finance stable is the first thing I consider. But without scholarship, everything will be harder.</p> <p>After having an intership at BGSV, I feel like I prefer the environment that I have to sit (more than) 8 hours a day. My discipline is too horrible, lol. So maybe I won’t learn master, at least for now. But I also have other plans.</p> <h2 id="current">current</h2> <p>I am researching about Mixture-of-Experts at company. At university, I still don’t graduate yet, still have some subjects left.</p> <p>My plan is focusing on my work at Bosch and gain some certificates on Coursera in this summer. After the internship, I expect to make 2 CVs: one in Static Testing and one in Machine Learning.</p> <p>I believe I should finish all my study program within 2025.</p> <h2 id="future">future</h2> <p>I don’t expect to be kept at Bosch, so I want to find a proper company and still accept that I don’t graduate yet.</p> <p>I want to pursue another bachelor degree, maybe in Linguistics or Psychology, still not decide yet.</p> <p>Mathematics is also an aspect I believe I should spend time on.</p> <p>That’s all.</p>]]></content><author><name></name></author><category term="Journal-of-Sciences"/><category term="cse"/><category term="plans"/><category term="english"/><summary type="html"><![CDATA[my sharing after finishing my thesis]]></summary></entry></feed>